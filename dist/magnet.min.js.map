{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","../node_modules/base64-js/lib/b64.js","../node_modules/buffer/index.js","../node_modules/ieee754/index.js","../node_modules/process/browser.js","Events.js","Generator.js","Mixins.js","Socket.js","Theme.js","View.js","component/Component.js","component/Letter.js","component/index.js","fake_fde5b6f3.js"],"names":["e","t","n","r","s","o","u","a","require","i","Error","f","exports","call","length","1","module","process","global","Buffer","__argument0","__argument1","__argument2","__argument3","__filename","__dirname","Arr","Uint8Array","Array","PLUS","charCodeAt","SLASH","NUMBER","LOWER","UPPER","PLUS_URL_SAFE","SLASH_URL_SAFE","decode","elt","code","toByteArray","b64","j","l","tmp","placeHolders","arr","len","charAt","L","push","v","fromByteArray","uint8","temp","num","extraBytes","output","encode","this","base64js","self","window","arguments","base64","ieee754","subject","encoding","noZero","str","buf","type","_typeof","trim","replace","coerce","byteLength","_useTypedArrays","_augment","_isBuffer","_set","isArray","isBuffer","readUInt8","write","_asciiWrite","string","offset","_charsWritten","blitBuffer","byteArray","asciiToBytes","_asciiSlice","start","end","ret","Math","min","String","fromCharCode","_readUInt16","littleEndian","noAssert","assert","val","_readUInt32","_readInt16","_readInt32","_readFloat","read","_readDouble","_writeUInt16","value","verifuint","_writeUInt32","_writeInt16","verifsint","_writeInt32","_writeFloat","verifIEEE754","_writeDouble","SlowBuffer","INSPECT_MAX_BYTES","poolSize","ArrayBuffer","foo","subarray","isEncoding","toLowerCase","b","utf8ToBytes","base64ToBytes","concat","list","totalLength","pos","item","copy","prototype","isFinite","undefined","swap","Number","remaining","strLen","byte","parseInt","substr","isNaN","_hexWrite","c","hi","lo","utf16leToBytes","toString","out","toHex","_hexSlice","res","decodeUtf8Char","_utf8Slice","slice","bytes","_utf16leSlice","toJSON","data","_arr","target","target_start","clamp","sliceLen","newBuf","get","console","log","set","writeUInt8","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","fill","inspect","join","toArrayBuffer","buffer","BP","index","defaultValue","ceil","Object","h","encodeURIComponent","split","src","dst","decodeURIComponent","err","max","floor","test","message","_get","toLocaleString","m","pBGvAp","3","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","NaN","Infinity","pow","rt","abs","LN2","once","noop","4","nextTick","canSetImmediate","setImmediate","canPost","postMessage","addEventListener","queue","ev","source","stopPropagation","shift","fn","setTimeout","title","browser","env","argv","on","addListener","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","me","startDrag","5","Events","parent","_classCallCheck","_parent","_startX","_startY","_focus","_component","initEvents","_createClass","key","_this","board","document","getElementById","_id","id","component","getAttribute","x","y","stopDrag","moveItem","mouseLeave","changedTouches","clientX","clientY","conf","_offsetX","_offsetY","style","left","top","getComputedStyle","getPropertyValue","right","bottom","xDir","_lastX","yDir","_lastY","View","_width","_height","_wrapperX","_wrapperY","newXY","convertXY","getItem","setLocalPosition","boardXY","getPosition","location","hash","items","Generator","props","_board","generateBoard","desc","width","height","_items","generateItems","_theme","generateTheme","theme","exists","assign","_this2","_toConsumableArray","spawn","map","generateLocation","extraValues","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","keys","options","Symbol","iterator","next","done","pickRandomFromArray","return","array","random","7","Mixins","dom","params","arrayStyle","entries","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","applyTemplate","indexOf","g","regex","match","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","eval","cssObject","cssArray","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","entry","toUpperCase","to","duration","change","currentTime","animateScroll","parseFloat","8","Socket","initSocket","_socketConnected","io","_socketEnabled","_socket","generatedBoard","_config","onLoad","connect","onSocketConnected","onSocketDisconnected","onSocketError","onAuthenticate","onMove","onAdd","askCreate","updateStats","getBoard","setBoard","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","move","time","setRemotePosition","addItem","authenticate","error","./Generator","9","Theme","Map","_colors","setTheme","_this3","_loop","has","filter","other","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","applyStyle","background","getColorCSS","color","10","_classNames","Set","initCSS","buildDOM","setWrapperSize","setEvents","_wrapperCSS","overflow","position","_boardCSS","root","_root","wrapper","createElement","className","stats","spinner","dot1","dot2","appendChild","innerHTML","setItem","renderItems","_this4","button","getElementsByClassName","outerHTML","removeChild","fadeIn","onresize","event","loadPosition","margin","_x","_y","offsetWidth","offsetHeight","applyBackground","object","members","display","opacity","hideLoad","values","_i","itemDiv","classDetails","convertToCSSString","getElementsByTagName","add","Component","config","_type","_defaultClass","transform","cursor","padding","userSelect","getColor","_color","xy","_text","setAttribute","_defaultTheme","applyTheme","animateSetPosition","moveAnimation","makeAnimation","../Mixins","_Component","Letter","_this5","_possibleConstructorReturn","__proto__","getPrototypeOf","text","hasClass","init","initCustom","_inherits","fontStyle","fontSize","lineHeight","outline","addCSSClass","pulse","borderColor","./Letter.js","14","Magnet","initConfig","initClasses","_name","_description","setDetails","setItems","fadeInStats","details","setSize","setPosition","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","./Mixins.js","./Socket.js","./Theme.js","./View.js","./component/index.js"],"mappings":"u9CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,MAAA,IAAAK,MAAA,uBAAAL,EAAA,KAAA,IAAAM,EAAAT,EAAAG,GAAA,CAAAO,QAAA,IAAAX,EAAAI,GAAA,GAAAQ,KAAAF,EAAAC,QAAA,SAAAZ,GAAA,IAAAE,EAAAD,EAAAI,GAAA,GAAAL,GAAA,OAAAI,EAAAF,GAAAF,IAAAW,EAAAA,EAAAC,QAAAZ,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAO,QAAA,IAAA,IAAAH,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAW,EAAA,CAAA,SAAAP,EAAAQ,EAAAJ,ICAA,SAAAK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,IAGA,SAAAb,GAGA,IAAAc,EAAA,oBAAAC,WACAA,WACAC,MAEAC,EAAA,IAAAC,WAAA,GACAC,EAAA,IAAAD,WAAA,GACAE,EAAA,IAAAF,WAAA,GACAG,EAAA,IAAAH,WAAA,GACAI,EAAA,IAAAJ,WAAA,GACAK,EAAA,IAAAL,WAAA,GACAM,EAAA,IAAAN,WAAA,GAEA,SAAAO,EAAAC,GACA,IAAAC,EAAAD,EAAAR,WAAA,GACA,OAAAS,IAAAV,GACAU,IAAAJ,EACA,GACAI,IAAAR,GACAQ,IAAAH,EACA,GACAG,EAAAP,GACA,EACAO,EAAAP,EAAA,GACAO,EAAAP,EAAA,GAAA,GACAO,EAAAL,EAAA,GACAK,EAAAL,EACAK,EAAAN,EAAA,GACAM,EAAAN,EAAA,QADA,EA0FArB,EAAA4B,YAtFA,SAAAC,GACA,IAAAhC,EAAAiC,EAAAC,EAAAC,EAAAC,EAAAC,EAEA,GAAA,EAAAL,EAAA3B,OAAA,EACA,MAAA,IAAAJ,MAAA,kDAQA,IAAAqC,EAAAN,EAAA3B,OACA+B,EAAA,MAAAJ,EAAAO,OAAAD,EAAA,GAAA,EAAA,MAAAN,EAAAO,OAAAD,EAAA,GAAA,EAAA,EAGAD,EAAA,IAAApB,EAAA,EAAAe,EAAA3B,OAAA,EAAA+B,GAGAF,EAAA,EAAAE,EAAAJ,EAAA3B,OAAA,EAAA2B,EAAA3B,OAEA,IAAAmC,EAAA,EAEA,SAAAC,EAAAC,GACAL,EAAAG,KAAAE,EAGA,IAAAT,EAAAjC,EAAA,EAAAA,EAAAkC,EAAAlC,GAAA,EAAAiC,GAAA,EAEAQ,GAAA,UADAN,EAAAP,EAAAI,EAAAO,OAAAvC,KAAA,GAAA4B,EAAAI,EAAAO,OAAAvC,EAAA,KAAA,GAAA4B,EAAAI,EAAAO,OAAAvC,EAAA,KAAA,EAAA4B,EAAAI,EAAAO,OAAAvC,EAAA,OACA,IACAyC,GAAA,MAAAN,IAAA,GACAM,EAAA,IAAAN,GAYA,OATA,IAAAC,EAEAK,EAAA,KADAN,EAAAP,EAAAI,EAAAO,OAAAvC,KAAA,EAAA4B,EAAAI,EAAAO,OAAAvC,EAAA,KAAA,IAEA,IAAAoC,IAEAK,GADAN,EAAAP,EAAAI,EAAAO,OAAAvC,KAAA,GAAA4B,EAAAI,EAAAO,OAAAvC,EAAA,KAAA,EAAA4B,EAAAI,EAAAO,OAAAvC,EAAA,KAAA,IACA,EAAA,KACAyC,EAAA,IAAAN,IAGAE,GA4CAlC,EAAAwC,cAzCA,SAAAC,GACA,IAAA5C,EAGA6C,EAAAxC,EAMAyC,EARAC,EAAAH,EAAAvC,OAAA,EACA2C,EAAA,GAGA,SAAAC,EAAAH,GACA,MAxFA,mEAwFAP,OAAAO,GAQA,IAAA9C,EAAA,EAAAK,EAAAuC,EAAAvC,OAAA0C,EAAA/C,EAAAK,EAAAL,GAAA,EACA6C,GAAAD,EAAA5C,IAAA,KAAA4C,EAAA5C,EAAA,IAAA,GAAA4C,EAAA5C,EAAA,GACAgD,GANAC,GADAH,EAOAD,IANA,GAAA,IAAAI,EAAAH,GAAA,GAAA,IAAAG,EAAAH,GAAA,EAAA,IAAAG,EAAA,GAAAH,GAUA,OAAAC,GACA,KAAA,EAEAC,GAAAC,GADAJ,EAAAD,EAAAA,EAAAvC,OAAA,KACA,GACA2C,GAAAC,EAAAJ,GAAA,EAAA,IACAG,GAAA,KACA,MACA,KAAA,EAEAA,GAAAC,GADAJ,GAAAD,EAAAA,EAAAvC,OAAA,IAAA,GAAAuC,EAAAA,EAAAvC,OAAA,KACA,IACA2C,GAAAC,EAAAJ,GAAA,EAAA,IACAG,GAAAC,EAAAJ,GAAA,EAAA,IACAG,GAAA,IAIA,OAAAA,GApHA,MAyHA,IAAA7C,EAAA+C,KAAAC,SAAA,GAAAhD,KAEAC,KAAA8C,KAAAnD,EAAA,UAAA,oBAAAqD,KAAAA,KAAA,oBAAAC,OAAAA,OAAA,GAAAtD,EAAA,UAAAW,OAAA4C,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAA,wCAAA,mCAnBAN,CAAAA,OAAAA,EAAAA,OAAAA,IAAAC,EAAAA,CAAAA,SAAAlD,EAAAQ,EAAAJ,IC3GA,SAAAK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAQA,IAAAuC,EAAAxD,EAAA,aACAyD,EAAAzD,EAAA,WAyCA,SAAAW,EAAA+C,EAAAC,EAAAC,GACA,KAAAT,gBAAAxC,GACA,OAAA,IAAAA,EAAA+C,EAAAC,EAAAC,GAEA,IAo2BAC,EAx1BAvD,EAUAwD,EAWA7D,EA05BAyD,EA37BAK,OAAA,IAAAL,EAAA,YAAAM,QAAAN,GAIA,GAAA,WAAAC,GAAA,WAAAI,EAEA,IADAL,GA+1BAG,EA/1BAH,GAg2BAO,KAAAJ,EAAAI,OACAJ,EAAAK,QAAA,aAAA,IAh2BAR,EAAApD,OAAA,GAAA,GACAoD,GAAA,IAMA,GAAA,WAAAK,EACAzD,EAAA6D,EAAAT,QACA,GAAA,WAAAK,EACAzD,EAAAK,EAAAyD,WAAAV,EAAAC,OACA,CAAA,GAAA,WAAAI,EAGA,MAAA,IAAA7D,MAAA,yDAFAI,EAAA6D,EAAAT,EAAApD,QAgBA,GAXAK,EAAA0D,gBAEAP,EAAAnD,EAAA2D,SAAA,IAAAnD,WAAAb,MAGAwD,EAAAX,MACA7C,OAAAA,EACAwD,EAAAS,WAAA,GAIA5D,EAAA0D,iBAAA,iBAAAX,EAAAU,WAEAN,EAAAU,KAAAd,QACA,GAu5BAe,EADAf,EAt5BAA,IAu5BA/C,EAAA+D,SAAAhB,IACAA,GAAA,iBAAA,IAAAA,EAAA,YAAAM,QAAAN,KACA,iBAAAA,EAAApD,OAv5BA,IAAAL,EAAA,EAAAA,EAAAK,EAAAL,IACAU,EAAA+D,SAAAhB,GACAI,EAAA7D,GAAAyD,EAAAiB,UAAA1E,GAEA6D,EAAA7D,GAAAyD,EAAAzD,QAEA,GAAA,WAAA8D,EACAD,EAAAc,MAAAlB,EAAA,EAAAC,QACA,GAAA,WAAAI,IAAApD,EAAA0D,kBAAAT,EACA,IAAA3D,EAAA,EAAAA,EAAAK,EAAAL,IACA6D,EAAA7D,GAAA,EAIA,OAAA6D,EA6HA,SAAAe,EAAAf,EAAAgB,EAAAC,EAAAzE,GAGA,OAFAK,EAAAqE,cACAC,EAmyBA,SAAApB,GAEA,IADA,IAAAqB,EAAA,GACAjF,EAAA,EAAAA,EAAA4D,EAAAvD,OAAAL,IAEAiF,EAAAxC,KAAA,IAAAmB,EAAAvC,WAAArB,IAEA,OAAAiF,EAzyBAC,CAAAL,GAAAhB,EAAAiB,EAAAzE,GA2LA,SAAA8E,EAAAtB,EAAAuB,EAAAC,GACA,IAAAC,EAAA,GACAD,EAAAE,KAAAC,IAAA3B,EAAAxD,OAAAgF,GAEA,IAAA,IAAArF,EAAAoF,EAAApF,EAAAqF,EAAArF,IACAsF,GAAAG,OAAAC,aAAA7B,EAAA7D,IACA,OAAAsF,EAsEA,SAAAK,EAAA9B,EAAAiB,EAAAc,EAAAC,GACAA,IACAC,EAAA,kBAAAF,EAAA,6BACAE,EAAAhB,MAAAA,EAAA,kBACAgB,EAAAhB,EAAA,EAAAjB,EAAAxD,OAAA,wCAGA,IAIA0F,EAJAzD,EAAAuB,EAAAxD,OACA,KAAAiC,GAAAwC,GAaA,OATAc,GACAG,EAAAlC,EAAAiB,GACAA,EAAA,EAAAxC,IACAyD,GAAAlC,EAAAiB,EAAA,IAAA,KAEAiB,EAAAlC,EAAAiB,IAAA,EACAA,EAAA,EAAAxC,IACAyD,GAAAlC,EAAAiB,EAAA,KAEAiB,EAWA,SAAAC,EAAAnC,EAAAiB,EAAAc,EAAAC,GACAA,IACAC,EAAA,kBAAAF,EAAA,6BACAE,EAAAhB,MAAAA,EAAA,kBACAgB,EAAAhB,EAAA,EAAAjB,EAAAxD,OAAA,wCAGA,IAIA0F,EAJAzD,EAAAuB,EAAAxD,OACA,KAAAiC,GAAAwC,GAqBA,OAjBAc,GACAd,EAAA,EAAAxC,IACAyD,EAAAlC,EAAAiB,EAAA,IAAA,IACAA,EAAA,EAAAxC,IACAyD,GAAAlC,EAAAiB,EAAA,IAAA,GACAiB,GAAAlC,EAAAiB,GACAA,EAAA,EAAAxC,IACAyD,GAAAlC,EAAAiB,EAAA,IAAA,KAAA,KAEAA,EAAA,EAAAxC,IACAyD,EAAAlC,EAAAiB,EAAA,IAAA,IACAA,EAAA,EAAAxC,IACAyD,GAAAlC,EAAAiB,EAAA,IAAA,GACAA,EAAA,EAAAxC,IACAyD,GAAAlC,EAAAiB,EAAA,IACAiB,GAAAlC,EAAAiB,IAAA,KAAA,GAEAiB,EA4BA,SAAAE,EAAApC,EAAAiB,EAAAc,EAAAC,GAQA,GAPAA,IACAC,EAAA,kBAAAF,EAAA,6BACAE,EAAAhB,MAAAA,EAAA,kBACAgB,EAAAhB,EAAA,EAAAjB,EAAAxD,OAAA,0CAGAwD,EAAAxD,QACAyE,GAAA,CAGA,IAAAiB,EAAAJ,EAAA9B,EAAAiB,EAAAc,GAAA,GAEA,OADA,MAAAG,GAEA,GAAA,MAAAA,EAAA,GAEAA,GAWA,SAAAG,EAAArC,EAAAiB,EAAAc,EAAAC,GAQA,GAPAA,IACAC,EAAA,kBAAAF,EAAA,6BACAE,EAAAhB,MAAAA,EAAA,kBACAgB,EAAAhB,EAAA,EAAAjB,EAAAxD,OAAA,0CAGAwD,EAAAxD,QACAyE,GAAA,CAGA,IAAAiB,EAAAC,EAAAnC,EAAAiB,EAAAc,GAAA,GAEA,OADA,WAAAG,GAEA,GAAA,WAAAA,EAAA,GAEAA,GAWA,SAAAI,EAAAtC,EAAAiB,EAAAc,EAAAC,GAMA,OALAA,IACAC,EAAA,kBAAAF,EAAA,6BACAE,EAAAhB,EAAA,EAAAjB,EAAAxD,OAAA,wCAGAmD,EAAA4C,KAAAvC,EAAAiB,EAAAc,EAAA,GAAA,GAWA,SAAAS,EAAAxC,EAAAiB,EAAAc,EAAAC,GAMA,OALAA,IACAC,EAAA,kBAAAF,EAAA,6BACAE,EAAAhB,EAAA,EAAAjB,EAAAxD,OAAA,wCAGAmD,EAAA4C,KAAAvC,EAAAiB,EAAAc,EAAA,GAAA,GAwBA,SAAAU,EAAAzC,EAAA0C,EAAAzB,EAAAc,EAAAC,GACAA,IACAC,EAAAS,MAAAA,EAAA,iBACAT,EAAA,kBAAAF,EAAA,6BACAE,EAAAhB,MAAAA,EAAA,kBACAgB,EAAAhB,EAAA,EAAAjB,EAAAxD,OAAA,wCACAmG,EAAAD,EAAA,QAGA,IAAAjE,EAAAuB,EAAAxD,OACA,KAAAiC,GAAAwC,GAGA,IAAA,IAAA9E,EAAA,EAAAiC,EAAAsD,KAAAC,IAAAlD,EAAAwC,EAAA,GAAA9E,EAAAiC,EAAAjC,IACA6D,EAAAiB,EAAA9E,IACAuG,EAAA,KAAA,GAAAX,EAAA5F,EAAA,EAAAA,MACA,GAAA4F,EAAA5F,EAAA,EAAAA,GAYA,SAAAyG,EAAA5C,EAAA0C,EAAAzB,EAAAc,EAAAC,GACAA,IACAC,EAAAS,MAAAA,EAAA,iBACAT,EAAA,kBAAAF,EAAA,6BACAE,EAAAhB,MAAAA,EAAA,kBACAgB,EAAAhB,EAAA,EAAAjB,EAAAxD,OAAA,wCACAmG,EAAAD,EAAA,aAGA,IAAAjE,EAAAuB,EAAAxD,OACA,KAAAiC,GAAAwC,GAGA,IAAA,IAAA9E,EAAA,EAAAiC,EAAAsD,KAAAC,IAAAlD,EAAAwC,EAAA,GAAA9E,EAAAiC,EAAAjC,IACA6D,EAAAiB,EAAA9E,GACAuG,IAAA,GAAAX,EAAA5F,EAAA,EAAAA,GAAA,IA6BA,SAAA0G,EAAA7C,EAAA0C,EAAAzB,EAAAc,EAAAC,GACAA,IACAC,EAAAS,MAAAA,EAAA,iBACAT,EAAA,kBAAAF,EAAA,6BACAE,EAAAhB,MAAAA,EAAA,kBACAgB,EAAAhB,EAAA,EAAAjB,EAAAxD,OAAA,wCACAsG,EAAAJ,EAAA,OAAA,QAGA1C,EAAAxD,QACAyE,GAIAwB,EAAAzC,EADA,GAAA0C,EACAA,EAEA,MAAAA,EAAA,EAFAzB,EAAAc,EAAAC,GAaA,SAAAe,EAAA/C,EAAA0C,EAAAzB,EAAAc,EAAAC,GACAA,IACAC,EAAAS,MAAAA,EAAA,iBACAT,EAAA,kBAAAF,EAAA,6BACAE,EAAAhB,MAAAA,EAAA,kBACAgB,EAAAhB,EAAA,EAAAjB,EAAAxD,OAAA,wCACAsG,EAAAJ,EAAA,YAAA,aAGA1C,EAAAxD,QACAyE,GAIA2B,EAAA5C,EADA,GAAA0C,EACAA,EAEA,WAAAA,EAAA,EAFAzB,EAAAc,EAAAC,GAaA,SAAAgB,EAAAhD,EAAA0C,EAAAzB,EAAAc,EAAAC,GACAA,IACAC,EAAAS,MAAAA,EAAA,iBACAT,EAAA,kBAAAF,EAAA,6BACAE,EAAAhB,MAAAA,EAAA,kBACAgB,EAAAhB,EAAA,EAAAjB,EAAAxD,OAAA,wCACAyG,EAAAP,EAAA,sBAAA,uBAGA1C,EAAAxD,QACAyE,GAGAtB,EAAAmB,MAAAd,EAAA0C,EAAAzB,EAAAc,EAAA,GAAA,GAWA,SAAAmB,EAAAlD,EAAA0C,EAAAzB,EAAAc,EAAAC,GACAA,IACAC,EAAAS,MAAAA,EAAA,iBACAT,EAAA,kBAAAF,EAAA,6BACAE,EAAAhB,MAAAA,EAAA,kBACAgB,EAAAhB,EAAA,EAAAjB,EAAAxD,OACA,wCACAyG,EAAAP,EAAA,uBAAA,wBAGA1C,EAAAxD,QACAyE,GAGAtB,EAAAmB,MAAAd,EAAA0C,EAAAzB,EAAAc,EAAA,GAAA,GAx0BAzF,EAAAO,OAAAA,EACAP,EAAA6G,WAAAtG,EACAP,EAAA8G,kBAAA,GACAvG,EAAAwG,SAAA,KAOAxG,EAAA0D,gBAAA,WAMA,IACA,IAAAP,EAAA,IAAAsD,YAAA,GACA9E,EAAA,IAAAnB,WAAA2C,GAEA,OADAxB,EAAA+E,IAAA,WAAA,OAAA,IACA,KAAA/E,EAAA+E,OACA,mBAAA/E,EAAAgF,SACA,MAAA9H,GACA,OAAA,GAbA,GA4FAmB,EAAA4G,WAAA,SAAA5D,GACA,OAAA+B,OAAA/B,GAAA6D,eACA,IAAA,MACA,IAAA,OACA,IAAA,QACA,IAAA,QACA,IAAA,SACA,IAAA,SACA,IAAA,MACA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAA,EACA,QACA,OAAA,IAIA7G,EAAA+D,SAAA,SAAA+C,GACA,QAAAA,MAAAA,IAAAA,EAAAlD,YAGA5D,EAAAyD,WAAA,SAAAP,EAAAF,GACA,IAAA4B,EAEA,OADA1B,GAAA,GACAF,GAAA,QACA,IAAA,MACA4B,EAAA1B,EAAAvD,OAAA,EACA,MACA,IAAA,OACA,IAAA,QACAiF,EAAAmC,EAAA7D,GAAAvD,OACA,MACA,IAAA,QACA,IAAA,SACA,IAAA,MACAiF,EAAA1B,EAAAvD,OACA,MACA,IAAA,SACAiF,EAAAoC,EAAA9D,GAAAvD,OACA,MACA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACAiF,EAAA,EAAA1B,EAAAvD,OACA,MACA,QACA,MAAA,IAAAJ,MAAA,oBAEA,OAAAqF,GAGA5E,EAAAiH,OAAA,SAAAC,EAAAC,GAIA,GAHA/B,EAAAtB,EAAAoD,GAAA,uEAGA,IAAAA,EAAAvH,OACA,OAAA,IAAAK,EAAA,GACA,GAAA,IAAAkH,EAAAvH,OACA,OAAAuH,EAAA,GAGA,IAAA5H,EACA,GAAA,iBAAA6H,EAEA,IAAA7H,EADA6H,EAAA,EACA7H,EAAA4H,EAAAvH,OAAAL,IACA6H,GAAAD,EAAA5H,GAAAK,OAIA,IAAAwD,EAAA,IAAAnD,EAAAmH,GACAC,EAAA,EACA,IAAA9H,EAAA,EAAAA,EAAA4H,EAAAvH,OAAAL,IAAA,CACA,IAAA+H,EAAAH,EAAA5H,GACA+H,EAAAC,KAAAnE,EAAAiE,GACAA,GAAAC,EAAA1H,OAEA,OAAAwD,GA8DAnD,EAAAuH,UAAAtD,MAAA,SAAAE,EAAAC,EAAAzE,EAAAqD,GAGA,GAAAwE,SAAApD,GACAoD,SAAA7H,KACAqD,EAAArD,EACAA,OAAA8H,OAEA,CACA,IAAAC,EAAA1E,EACAA,EAAAoB,EACAA,EAAAzE,EACAA,EAAA+H,EAGAtD,EAAAuD,OAAAvD,IAAA,EACA,IAWAQ,EAjCAzB,EAAAiB,EAAAzE,EANAwD,EAAAiB,EAAAzE,EAhBAwD,EAAAiB,EAAAzE,EA4CAiI,EAAApF,KAAA7C,OAAAyE,EAYA,OAXAzE,EAIAiI,GADAjI,EAAAgI,OAAAhI,MAEAA,EAAAiI,GAJAjI,EAAAiI,EAOA5E,EAAA+B,OAAA/B,GAAA,QAAA6D,eAIA,IAAA,MACAjC,EAtFA,SAAAzB,EAAAgB,EAAAC,EAAAzE,GACAyE,EAAAuD,OAAAvD,IAAA,EACA,IAAAwD,EAAAzE,EAAAxD,OAAAyE,EACAzE,EAIAiI,GADAjI,EAAAgI,OAAAhI,MAEAA,EAAAiI,GAJAjI,EAAAiI,EASA,IAAAC,EAAA1D,EAAAxE,OACAyF,EAAAyC,EAAA,GAAA,EAAA,sBAEAA,EAAA,EAAAlI,IACAA,EAAAkI,EAAA,GAEA,IAAA,IAAAvI,EAAA,EAAAA,EAAAK,EAAAL,IAAA,CACA,IAAAwI,EAAAC,SAAA5D,EAAA6D,OAAA,EAAA1I,EAAA,GAAA,IACA8F,GAAA6C,MAAAH,GAAA,sBACA3E,EAAAiB,EAAA9E,GAAAwI,EAGA,OADA9H,EAAAqE,cAAA,EAAA/E,EACAA,EA6DA4I,CAAA1F,KAAA2B,EAAAC,EAAAzE,GACA,MACA,IAAA,OACA,IAAA,QA7DAwD,EA8DAX,KA9DA4B,EA8DAA,EA9DAzE,EA8DAA,EAAAiF,EA7DA5E,EAAAqE,cACAC,EAAAyC,EA4DA5C,GA5DAhB,EAAAiB,EAAAzE,GA6DA,MACA,IAAA,QACAiF,EAAAV,EAAA1B,KAAA2B,EAAAC,EAAAzE,GACA,MACA,IAAA,SACAiF,EAvDAV,EAuDA1B,KAAA2B,EAAAC,EAAAzE,GACA,MACA,IAAA,SAtDAwD,EAuDAX,KAvDA4B,EAuDAA,EAvDAzE,EAuDAA,EAAAiF,EAtDA5E,EAAAqE,cACAC,EAAA0C,EAqDA7C,GArDAhB,EAAAiB,EAAAzE,GAsDA,MACA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WAtDAwD,EAuDAX,KAvDA4B,EAuDAA,EAvDAzE,EAuDAA,EAAAiF,EAtDA5E,EAAAqE,cACAC,EA4xBA,SAAApB,GAGA,IAFA,IAAAiF,EAAAC,EAAAC,EACA9D,EAAA,GACAjF,EAAA,EAAAA,EAAA4D,EAAAvD,OAAAL,IACA6I,EAAAjF,EAAAvC,WAAArB,GACA8I,EAAAD,GAAA,EACAE,EAAAF,EAAA,IACA5D,EAAAxC,KAAAsG,GACA9D,EAAAxC,KAAAqG,GAGA,OAAA7D,EAvyBA+D,CAqDAnE,GArDAhB,EAAAiB,EAAAzE,GAsDA,MACA,QACA,MAAA,IAAAJ,MAAA,oBAEA,OAAAqF,GAGA5E,EAAAuH,UAAAgB,SAAA,SAAAvF,EAAA0B,EAAAC,GACA,IAYAC,EAwEAzB,EAAAuB,EAAAC,EApFAjC,EAAAF,KASA,GAPAQ,EAAA+B,OAAA/B,GAAA,QAAA6D,cACAnC,EAAAiD,OAAAjD,IAAA,GACAC,OAAA8C,IAAA9C,EACAgD,OAAAhD,GACAA,EAAAjC,EAAA/C,UAGA+E,EACA,MAAA,GAGA,OAAA1B,GACA,IAAA,MACA4B,EA2GA,SAAAzB,EAAAuB,EAAAC,GACA,IAAA/C,EAAAuB,EAAAxD,SAEA+E,GAAAA,EAAA,KAAAA,EAAA,KACAC,GAAAA,EAAA,GAAA/C,EAAA+C,KAAAA,EAAA/C,GAGA,IADA,IAAA4G,EAAA,GACAlJ,EAAAoF,EAAApF,EAAAqF,EAAArF,IACAkJ,GAAAC,EAAAtF,EAAA7D,IAEA,OAAAkJ,EArHAE,CAAAhG,EAAAgC,EAAAC,GACA,MACA,IAAA,OACA,IAAA,QACAC,EAyEA,SAAAzB,EAAAuB,EAAAC,GACA,IAAAgE,EAAA,GACAlH,EAAA,GACAkD,EAAAE,KAAAC,IAAA3B,EAAAxD,OAAAgF,GAEA,IAAA,IAAArF,EAAAoF,EAAApF,EAAAqF,EAAArF,IACA6D,EAAA7D,IAAA,KACAqJ,GAAAC,EAAAnH,GAAAsD,OAAAC,aAAA7B,EAAA7D,IACAmC,EAAA,IAEAA,GAAA,IAAA0B,EAAA7D,GAAAiJ,SAAA,IAIA,OAAAI,EAAAC,EAAAnH,GAvFAoH,CAAAnG,EAAAgC,EAAAC,GACA,MACA,IAAA,QACAC,EAAAH,EAAA/B,EAAAgC,EAAAC,GACA,MACA,IAAA,SACAC,EA8FAH,EA9FA/B,EAAAgC,EAAAC,GACA,MACA,IAAA,SAyDAxB,EAxDAT,EAwDAiC,EAxDAA,EAAAC,EAyDA,KADAF,EAxDAA,IAyDAC,IAAAxB,EAAAxD,OACAkD,EAAAZ,cAAAkB,GAEAN,EAAAZ,cAAAkB,EAAA2F,MAAApE,EAAAC,IA3DA,MACA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACAC,EAqGA,SAAAzB,EAAAuB,EAAAC,GAGA,IAFA,IAAAoE,EAAA5F,EAAA2F,MAAApE,EAAAC,GACAgE,EAAA,GACArJ,EAAA,EAAAA,EAAAyJ,EAAApJ,OAAAL,GAAA,EACAqJ,GAAA5D,OAAAC,aAAA+D,EAAAzJ,GAAA,IAAAyJ,EAAAzJ,EAAA,IAEA,OAAAqJ,EA3GAK,CAAAtG,EAAAgC,EAAAC,GACA,MACA,QACA,MAAA,IAAApF,MAAA,oBAEA,OAAAqF,GAGA5E,EAAAuH,UAAA0B,OAAA,WACA,MAAA,CACA7F,KAAA,SACA8F,KAAAzI,MAAA8G,UAAAuB,MAAApJ,KAAA8C,KAAA2G,MAAA3G,KAAA,KAKAxC,EAAAuH,UAAAD,KAAA,SAAA8B,EAAAC,EAAA3E,EAAAC,GAQA,GALAD,IAAAA,EAAA,GACAC,GAAA,IAAAA,IAAAA,EAAAnC,KAAA7C,QACA0J,IAAAA,EAAA,GAGA1E,IAAAD,GACA,IAAA0E,EAAAzJ,QAAA,IARA6C,KAQA7C,OAAA,CAGAyF,EAAAV,GAAAC,EAAA,2BACAS,EAAA,GAAAiE,GAAAA,EAAAD,EAAAzJ,OACA,6BACAyF,EAAA,GAAAV,GAAAA,EAdAlC,KAcA7C,OAAA,6BACAyF,EAAA,GAAAT,GAAAA,GAfAnC,KAeA7C,OAAA,2BAGAgF,EAAAnC,KAAA7C,SACAgF,EAAAnC,KAAA7C,QACAyJ,EAAAzJ,OAAA0J,EAAA1E,EAAAD,IACAC,EAAAyE,EAAAzJ,OAAA0J,EAAA3E,GAEA,IAAA9C,EAAA+C,EAAAD,EAEA,GAAA9C,EAAA,MAAA5B,EAAA0D,gBACA,IAAA,IAAApE,EAAA,EAAAA,EAAAsC,EAAAtC,IACA8J,EAAA9J,EAAA+J,GAAA7G,KAAAlD,EAAAoF,QAEA0E,EAAAvF,KAAArB,KAAAmE,SAAAjC,EAAAA,EAAA9C,GAAAyH,KAgEArJ,EAAAuH,UAAAuB,MAAA,SAAApE,EAAAC,GACA,IAAA/C,EAAAY,KAAA7C,OAIA,GAHA+E,EAAA4E,EAAA5E,EAAA9C,EAAA,GACA+C,EAAA2E,EAAA3E,EAAA/C,EAAAA,GAEA5B,EAAA0D,gBACA,OAAA1D,EAAA2D,SAAAnB,KAAAmE,SAAAjC,EAAAC,IAIA,IAFA,IAAA4E,EAAA5E,EAAAD,EACA8E,EAAA,IAAAxJ,EAAAuJ,OAAA9B,GAAA,GACAnI,EAAA,EAAAA,EAAAiK,EAAAjK,IACAkK,EAAAlK,GAAAkD,KAAAlD,EAAAoF,GAEA,OAAA8E,GAKAxJ,EAAAuH,UAAAkC,IAAA,SAAArF,GAEA,OADAsF,QAAAC,IAAA,6DACAnH,KAAAwB,UAAAI,IAIApE,EAAAuH,UAAAqC,IAAA,SAAA5H,EAAAoC,GAEA,OADAsF,QAAAC,IAAA,6DACAnH,KAAAqH,WAAA7H,EAAAoC,IAGApE,EAAAuH,UAAAvD,UAAA,SAAAI,EAAAe,GAMA,GALAA,IACAC,EAAAhB,MAAAA,EAAA,kBACAgB,EAAAhB,EAAA5B,KAAA7C,OAAA,0CAGAyE,GAAA5B,KAAA7C,QAGA,OAAA6C,KAAA4B,IA2BApE,EAAAuH,UAAAuC,aAAA,SAAA1F,EAAAe,GACA,OAAAF,EAAAzC,KAAA4B,GAAA,EAAAe,IAGAnF,EAAAuH,UAAAwC,aAAA,SAAA3F,EAAAe,GACA,OAAAF,EAAAzC,KAAA4B,GAAA,EAAAe,IAmCAnF,EAAAuH,UAAAyC,aAAA,SAAA5F,EAAAe,GACA,OAAAG,EAAA9C,KAAA4B,GAAA,EAAAe,IAGAnF,EAAAuH,UAAA0C,aAAA,SAAA7F,EAAAe,GACA,OAAAG,EAAA9C,KAAA4B,GAAA,EAAAe,IAGAnF,EAAAuH,UAAA2C,SAAA,SAAA9F,EAAAe,GAOA,GANAA,IACAC,EAAAhB,MAAAA,EACA,kBACAgB,EAAAhB,EAAA5B,KAAA7C,OAAA,0CAGAyE,GAAA5B,KAAA7C,QAIA,OADA,IAAA6C,KAAA4B,IAEA,GAAA,IAAA5B,KAAA4B,GAAA,GAEA5B,KAAA4B,IAsBApE,EAAAuH,UAAA4C,YAAA,SAAA/F,EAAAe,GACA,OAAAI,EAAA/C,KAAA4B,GAAA,EAAAe,IAGAnF,EAAAuH,UAAA6C,YAAA,SAAAhG,EAAAe,GACA,OAAAI,EAAA/C,KAAA4B,GAAA,EAAAe,IAsBAnF,EAAAuH,UAAA8C,YAAA,SAAAjG,EAAAe,GACA,OAAAK,EAAAhD,KAAA4B,GAAA,EAAAe,IAGAnF,EAAAuH,UAAA+C,YAAA,SAAAlG,EAAAe,GACA,OAAAK,EAAAhD,KAAA4B,GAAA,EAAAe,IAYAnF,EAAAuH,UAAAgD,YAAA,SAAAnG,EAAAe,GACA,OAAAM,EAAAjD,KAAA4B,GAAA,EAAAe,IAGAnF,EAAAuH,UAAAiD,YAAA,SAAApG,EAAAe,GACA,OAAAM,EAAAjD,KAAA4B,GAAA,EAAAe,IAYAnF,EAAAuH,UAAAkD,aAAA,SAAArG,EAAAe,GACA,OAAAQ,EAAAnD,KAAA4B,GAAA,EAAAe,IAGAnF,EAAAuH,UAAAmD,aAAA,SAAAtG,EAAAe,GACA,OAAAQ,EAAAnD,KAAA4B,GAAA,EAAAe,IAGAnF,EAAAuH,UAAAsC,WAAA,SAAAhE,EAAAzB,EAAAe,GACAA,IACAC,EAAAS,MAAAA,EAAA,iBACAT,EAAAhB,MAAAA,EAAA,kBACAgB,EAAAhB,EAAA5B,KAAA7C,OAAA,wCACAmG,EAAAD,EAAA,MAGAzB,GAAA5B,KAAA7C,SAEA6C,KAAA4B,GAAAyB,IAuBA7F,EAAAuH,UAAAoD,cAAA,SAAA9E,EAAAzB,EAAAe,GACAS,EAAApD,KAAAqD,EAAAzB,GAAA,EAAAe,IAGAnF,EAAAuH,UAAAqD,cAAA,SAAA/E,EAAAzB,EAAAe,GACAS,EAAApD,KAAAqD,EAAAzB,GAAA,EAAAe,IAsBAnF,EAAAuH,UAAAsD,cAAA,SAAAhF,EAAAzB,EAAAe,GACAY,EAAAvD,KAAAqD,EAAAzB,GAAA,EAAAe,IAGAnF,EAAAuH,UAAAuD,cAAA,SAAAjF,EAAAzB,EAAAe,GACAY,EAAAvD,KAAAqD,EAAAzB,GAAA,EAAAe,IAGAnF,EAAAuH,UAAAwD,UAAA,SAAAlF,EAAAzB,EAAAe,GACAA,IACAC,EAAAS,MAAAA,EAAA,iBACAT,EAAAhB,MAAAA,EAAA,kBACAgB,EAAAhB,EAAA5B,KAAA7C,OAAA,wCACAsG,EAAAJ,EAAA,KAAA,MAGAzB,GAAA5B,KAAA7C,SAGA,GAAAkG,EACArD,KAAAqH,WAAAhE,EAAAzB,EAAAe,GAEA3C,KAAAqH,WAAA,IAAAhE,EAAA,EAAAzB,EAAAe,KAsBAnF,EAAAuH,UAAAyD,aAAA,SAAAnF,EAAAzB,EAAAe,GACAa,EAAAxD,KAAAqD,EAAAzB,GAAA,EAAAe,IAGAnF,EAAAuH,UAAA0D,aAAA,SAAApF,EAAAzB,EAAAe,GACAa,EAAAxD,KAAAqD,EAAAzB,GAAA,EAAAe,IAsBAnF,EAAAuH,UAAA2D,aAAA,SAAArF,EAAAzB,EAAAe,GACAe,EAAA1D,KAAAqD,EAAAzB,GAAA,EAAAe,IAGAnF,EAAAuH,UAAA4D,aAAA,SAAAtF,EAAAzB,EAAAe,GACAe,EAAA1D,KAAAqD,EAAAzB,GAAA,EAAAe,IAmBAnF,EAAAuH,UAAA6D,aAAA,SAAAvF,EAAAzB,EAAAe,GACAgB,EAAA3D,KAAAqD,EAAAzB,GAAA,EAAAe,IAGAnF,EAAAuH,UAAA8D,aAAA,SAAAxF,EAAAzB,EAAAe,GACAgB,EAAA3D,KAAAqD,EAAAzB,GAAA,EAAAe,IAoBAnF,EAAAuH,UAAA+D,cAAA,SAAAzF,EAAAzB,EAAAe,GACAkB,EAAA7D,KAAAqD,EAAAzB,GAAA,EAAAe,IAGAnF,EAAAuH,UAAAgE,cAAA,SAAA1F,EAAAzB,EAAAe,GACAkB,EAAA7D,KAAAqD,EAAAzB,GAAA,EAAAe,IAIAnF,EAAAuH,UAAAiE,KAAA,SAAA3F,EAAAnB,EAAAC,GAaA,GAZAkB,IAAAA,EAAA,GACAnB,IAAAA,EAAA,GACAC,IAAAA,EAAAnC,KAAA7C,QAEA,iBAAAkG,IACAA,EAAAA,EAAAlF,WAAA,IAGAyE,EAAA,iBAAAS,IAAAoC,MAAApC,GAAA,yBACAT,EAAAV,GAAAC,EAAA,eAGAA,IAAAD,GACA,IAAAlC,KAAA7C,OAAA,CAEAyF,EAAA,GAAAV,GAAAA,EAAAlC,KAAA7C,OAAA,uBACAyF,EAAA,GAAAT,GAAAA,GAAAnC,KAAA7C,OAAA,qBAEA,IAAA,IAAAL,EAAAoF,EAAApF,EAAAqF,EAAArF,IACAkD,KAAAlD,GAAAuG,IAIA7F,EAAAuH,UAAAkE,QAAA,WAGA,IAFA,IAAAjD,EAAA,GACA5G,EAAAY,KAAA7C,OACAL,EAAA,EAAAA,EAAAsC,EAAAtC,IAEA,GADAkJ,EAAAlJ,GAAAmJ,EAAAjG,KAAAlD,IACAA,IAAAG,EAAA8G,kBAAA,CACAiC,EAAAlJ,EAAA,GAAA,MACA,MAGA,MAAA,WAAAkJ,EAAAkD,KAAA,KAAA,KAOA1L,EAAAuH,UAAAoE,cAAA,WACA,GAAA,oBAAAnL,WAAA,CACA,GAAAR,EAAA0D,gBACA,OAAA,IAAA1D,EAAAwC,MAAAoJ,OAGA,IADA,IAAAzI,EAAA,IAAA3C,WAAAgC,KAAA7C,QACAL,EAAA,EAAAsC,EAAAuB,EAAAxD,OAAAL,EAAAsC,EAAAtC,GAAA,EACA6D,EAAA7D,GAAAkD,KAAAlD,GACA,OAAA6D,EAAAyI,OAGA,MAAA,IAAArM,MAAA,uDAYA,IAAAsM,EAAA7L,EAAAuH,UA0DA,SAAA+B,EAAAwC,EAAAlK,EAAAmK,GACA,MAAA,iBAAAD,EAAAC,EAEAnK,IADAkK,IAAAA,GACAlK,EACA,GAAAkK,EAAAA,EAEA,IADAA,GAAAlK,GACAkK,EACA,EAGA,SAAAtI,EAAA7D,GAKA,OADAA,IAAAkF,KAAAmH,MAAArM,IACA,EAAA,EAAAA,EAGA,SAAAmE,EAAAf,GACA,OAAAtC,MAAAqD,SAAA,SAAAf,GACA,MAAA,mBAAAkJ,OAAA1E,UAAAgB,SAAA7I,KAAAqD,KACAA,GASA,SAAA0F,EAAA1J,GACA,OAAAA,EAAA,GAAA,IAAAA,EAAAwJ,SAAA,IACAxJ,EAAAwJ,SAAA,IAGA,SAAAxB,EAAA7D,GAEA,IADA,IAAAqB,EAAA,GACAjF,EAAA,EAAAA,EAAA4D,EAAAvD,OAAAL,IAAA,CACA,IAAAwH,EAAA5D,EAAAvC,WAAArB,GACA,GAAAwH,GAAA,IACAvC,EAAAxC,KAAAmB,EAAAvC,WAAArB,QACA,CACA,IAAAoF,EAAApF,EACA,OAAAwH,GAAAA,GAAA,OAAAxH,IAEA,IADA,IAAA4M,EAAAC,mBAAAjJ,EAAA4F,MAAApE,EAAApF,EAAA,IAAA0I,OAAA,GAAAoE,MAAA,KACA7K,EAAA,EAAAA,EAAA2K,EAAAvM,OAAA4B,IACAgD,EAAAxC,KAAAgG,SAAAmE,EAAA3K,GAAA,MAGA,OAAAgD,EA0BA,SAAAyC,EAAA9D,GACA,OAAAL,EAAAxB,YAAA6B,GAGA,SAAAoB,EAAA+H,EAAAC,EAAAlI,EAAAzE,GAEA,IADA,IACAL,EAAA,EAAAA,EAAAK,KACAL,EAAA8E,GAAAkI,EAAA3M,QAAAL,GAAA+M,EAAA1M,QADAL,IAGAgN,EAAAhN,EAAA8E,GAAAiI,EAAA/M,GAEA,OAAAA,EAGA,SAAAsJ,EAAA1F,GACA,IACA,OAAAqJ,mBAAArJ,GACA,MAAAsJ,GACA,OAAAzH,OAAAC,aAAA,QASA,SAAAc,EAAAD,EAAA4G,GACArH,EAAA,iBAAAS,EAAA,yCACAT,EAAA,GAAAS,EAAA,4DACAT,EAAAS,GAAA4G,EAAA,+CACArH,EAAAP,KAAA6H,MAAA7G,KAAAA,EAAA,oCAGA,SAAAI,EAAAJ,EAAA4G,EAAA3H,GACAM,EAAA,iBAAAS,EAAA,yCACAT,EAAAS,GAAA4G,EAAA,2CACArH,EAAAN,GAAAe,EAAA,4CACAT,EAAAP,KAAA6H,MAAA7G,KAAAA,EAAA,oCAGA,SAAAO,EAAAP,EAAA4G,EAAA3H,GACAM,EAAA,iBAAAS,EAAA,yCACAT,EAAAS,GAAA4G,EAAA,2CACArH,EAAAN,GAAAe,EAAA,4CAGA,SAAAT,EAAAuH,EAAAC,GACA,IAAAD,EAAA,MAAA,IAAApN,MAAAqN,GAAA,oBAhLA5M,EAAA2D,SAAA,SAAAhC,GAiDA,OAhDAA,EAAAiC,WAAA,EAGAjC,EAAAkL,KAAAlL,EAAA8H,IACA9H,EAAAkC,KAAAlC,EAAAiI,IAGAjI,EAAA8H,IAAAoC,EAAApC,IACA9H,EAAAiI,IAAAiC,EAAAjC,IAEAjI,EAAAsC,MAAA4H,EAAA5H,MACAtC,EAAA4G,SAAAsD,EAAAtD,SACA5G,EAAAmL,eAAAjB,EAAAtD,SACA5G,EAAAsH,OAAA4C,EAAA5C,OACAtH,EAAA2F,KAAAuE,EAAAvE,KACA3F,EAAAmH,MAAA+C,EAAA/C,MACAnH,EAAAqC,UAAA6H,EAAA7H,UACArC,EAAAmI,aAAA+B,EAAA/B,aACAnI,EAAAoI,aAAA8B,EAAA9B,aACApI,EAAAqI,aAAA6B,EAAA7B,aACArI,EAAAsI,aAAA4B,EAAA5B,aACAtI,EAAAuI,SAAA2B,EAAA3B,SACAvI,EAAAwI,YAAA0B,EAAA1B,YACAxI,EAAAyI,YAAAyB,EAAAzB,YACAzI,EAAA0I,YAAAwB,EAAAxB,YACA1I,EAAA2I,YAAAuB,EAAAvB,YACA3I,EAAA4I,YAAAsB,EAAAtB,YACA5I,EAAA6I,YAAAqB,EAAArB,YACA7I,EAAA8I,aAAAoB,EAAApB,aACA9I,EAAA+I,aAAAmB,EAAAnB,aACA/I,EAAAkI,WAAAgC,EAAAhC,WACAlI,EAAAgJ,cAAAkB,EAAAlB,cACAhJ,EAAAiJ,cAAAiB,EAAAjB,cACAjJ,EAAAkJ,cAAAgB,EAAAhB,cACAlJ,EAAAmJ,cAAAe,EAAAf,cACAnJ,EAAAoJ,UAAAc,EAAAd,UACApJ,EAAAqJ,aAAAa,EAAAb,aACArJ,EAAAsJ,aAAAY,EAAAZ,aACAtJ,EAAAuJ,aAAAW,EAAAX,aACAvJ,EAAAwJ,aAAAU,EAAAV,aACAxJ,EAAAyJ,aAAAS,EAAAT,aACAzJ,EAAA0J,aAAAQ,EAAAR,aACA1J,EAAA2J,cAAAO,EAAAP,cACA3J,EAAA4J,cAAAM,EAAAN,cACA5J,EAAA6J,KAAAK,EAAAL,KACA7J,EAAA8J,QAAAI,EAAAJ,QACA9J,EAAAgK,cAAAE,EAAAF,cAEAhK,KAkIAjC,KAAA8C,KAAAnD,EAAA,UAAA,oBAAAqD,KAAAA,KAAA,oBAAAC,OAAAA,OAAA,GAAAtD,EAAA,UAAAW,OAAA4C,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAA,mCAAA,4BCxiCAmK,CAAAA,YAAA9E,EAAAA,OAAA,EAAAnF,QAAA,EAAAkK,OAAA,IAAAC,EAAA,CAAA,SAAA5N,EAAAQ,EAAAJ,IA/CA,SAAAK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAb,EAAAiG,KAAA,SAAAkG,EAAAxH,EAAA8I,EAAAC,EAAAC,GACA,IAAAvO,EAAAkO,EACAM,EAAA,EAAAD,EAAAD,EAAA,EACAG,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAE,GAAA,EACAlO,EAAA4N,EAAAE,EAAA,EAAA,EACAK,EAAAP,GAAA,EAAA,EACAjO,EAAA2M,EAAAxH,EAAA9E,GAOA,IALAA,GAAAmO,EAEA5O,EAAAI,GAAA,IAAAuO,GAAA,EACAvO,KAAAuO,EACAA,GAAAH,EACA,EAAAG,EAAA3O,EAAA,IAAAA,EAAA+M,EAAAxH,EAAA9E,GAAAA,GAAAmO,EAAAD,GAAA,GAKA,IAHAT,EAAAlO,GAAA,IAAA2O,GAAA,EACA3O,KAAA2O,EACAA,GAAAL,EACA,EAAAK,EAAAT,EAAA,IAAAA,EAAAnB,EAAAxH,EAAA9E,GAAAA,GAAAmO,EAAAD,GAAA,GAEA,GAAA,IAAA3O,EACAA,EAAA,EAAA0O,MACA,CAAA,GAAA1O,IAAAyO,EACA,OAAAP,EAAAW,IAAAC,EAAAA,GAAA1O,GAAA,EAAA,GAEA8N,GAAAlI,KAAA+I,IAAA,EAAAT,GACAtO,GAAA0O,EAEA,OAAAtO,GAAA,EAAA,GAAA8N,EAAAlI,KAAA+I,IAAA,EAAA/O,EAAAsO,IAGA1N,EAAAwE,MAAA,SAAA2H,EAAA/F,EAAAzB,EAAA8I,EAAAC,EAAAC,GACA,IAAAvO,EAAAkO,EAAA5E,EACAkF,EAAA,EAAAD,EAAAD,EAAA,EACAG,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAO,EAAA,KAAAV,EAAAtI,KAAA+I,IAAA,GAAA,IAAA/I,KAAA+I,IAAA,GAAA,IAAA,EACAtO,EAAA4N,EAAA,EAAAE,EAAA,EACAK,EAAAP,EAAA,GAAA,EACAjO,EAAA4G,EAAA,GAAA,IAAAA,GAAA,EAAAA,EAAA,EAAA,EAAA,EAmCA,IAjCAA,EAAAhB,KAAAiJ,IAAAjI,GAEAoC,MAAApC,IAAAA,IAAA8H,EAAAA,GACAZ,EAAA9E,MAAApC,GAAA,EAAA,EACAhH,EAAAyO,IAEAzO,EAAAgG,KAAA6H,MAAA7H,KAAA8E,IAAA9D,GAAAhB,KAAAkJ,KACAlI,GAAAsC,EAAAtD,KAAA+I,IAAA,GAAA/O,IAAA,IACAA,IACAsJ,GAAA,GAOA,IAJAtC,GADA,GAAAhH,EAAA0O,EACAM,EAAA1F,EAEA0F,EAAAhJ,KAAA+I,IAAA,EAAA,EAAAL,IAEApF,IACAtJ,IACAsJ,GAAA,GAGAmF,GAAAzO,EAAA0O,GACAR,EAAA,EACAlO,EAAAyO,GACA,GAAAzO,EAAA0O,GACAR,GAAAlH,EAAAsC,EAAA,GAAAtD,KAAA+I,IAAA,EAAAT,GACAtO,GAAA0O,IAEAR,EAAAlH,EAAAhB,KAAA+I,IAAA,EAAAL,EAAA,GAAA1I,KAAA+I,IAAA,EAAAT,GACAtO,EAAA,IAIA,GAAAsO,EAAAvB,EAAAxH,EAAA9E,GAAA,IAAAyN,EAAAzN,GAAAmO,EAAAV,GAAA,IAAAI,GAAA,GAIA,IAFAtO,EAAAA,GAAAsO,EAAAJ,EACAM,GAAAF,EACA,EAAAE,EAAAzB,EAAAxH,EAAA9E,GAAA,IAAAT,EAAAS,GAAAmO,EAAA5O,GAAA,IAAAwO,GAAA,GAEAzB,EAAAxH,EAAA9E,EAAAmO,IAAA,IAAAxO,KAGAS,KAAA8C,KAAAnD,EAAA,UAAA,oBAAAqD,KAAAA,KAAA,oBAAAC,OAAAA,OAAA,GAAAtD,EAAA,UAAAW,OAAA4C,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAA,oCAAA,6BCrCA9C,CAAAA,OAAAA,EAAAkO,OAAAC,IAAAC,EAAA,CAAA,SAAA7O,EAAAQ,EAAAJ,IAjDA,SAAAK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GA6CA,SAAA2N,MA1CAnO,EAAAD,EAAAJ,QAAA,IAEA0O,SAAA,WACA,IAAAC,EAAA,oBAAAzL,QACAA,OAAA0L,aACAC,EAAA,oBAAA3L,QACAA,OAAA4L,aAAA5L,OAAA6L,iBAGA,GAAAJ,EACA,OAAA,SAAA5O,GAAA,OAAAmD,OAAA0L,aAAA7O,IAGA,GAAA8O,EAAA,CACA,IAAAG,EAAA,GAYA,OAXA9L,OAAA6L,iBAAA,UAAA,SAAAE,GACA,IAAAC,EAAAD,EAAAC,OACAA,IAAAhM,QAAA,OAAAgM,GAAA,iBAAAD,EAAAxF,OACAwF,EAAAE,kBACA,EAAAH,EAAA9O,QACA8O,EAAAI,OACAC,MAGA,GAEA,SAAAA,GACAL,EAAA1M,KAAA+M,GACAnM,OAAA4L,YAAA,eAAA,MAIA,OAAA,SAAAO,GACAC,WAAAD,EAAA,IA/BA,GAmCAhP,EAAAkP,MAAA,UACAlP,EAAAmP,SAAA,EACAnP,EAAAoP,IAAA,GACApP,EAAAqP,KAAA,GAIArP,EAAAsP,GAAAnB,EACAnO,EAAAuP,YAAApB,EACAnO,EAAAkO,KAAAC,EACAnO,EAAAwP,IAAArB,EACAnO,EAAAyP,eAAAtB,EACAnO,EAAA0P,mBAAAvB,EACAnO,EAAA2P,KAAAxB,EAEAnO,EAAA4P,QAAA,SAAAC,GACA,MAAA,IAAApQ,MAAA,qCAIAO,EAAA8P,IAAA,WAAA,MAAA,KACA9P,EAAA+P,MAAA,SAAAC,GACA,MAAA,IAAAvQ,MAAA,qCAGAG,KAAA8C,KAAAnD,EAAA,UAAA,oBAAAqD,KAAAA,KAAA,oBAAAC,OAAAA,OAAA,GAAAtD,EAAA,UAAAW,OAAA4C,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAA,sCAAA,6BCvBAmN,CAAAA,OAAAA,EAAAA,OAAAC,IAAAC,EAAA,CAAA,SAAA5Q,EAAAQ,EAAAJ,IA1CA,SAAAK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAT,EAAAJ,QAAA,WACA,SAAAyQ,EAAAC,GAAAC,gBAAA5N,KAAA0N,GACA1N,KAAA6N,QAAAF,EACA3N,KAAA8N,QAAA,EACA9N,KAAA+N,QAAA,EACA/N,KAAAgO,QAAA,EACAhO,KAAAiO,YAAA,EACAjO,KAAAkO,aAPA,OAAAC,aAAAT,EAAA,CAAA,CAAAU,IAAA,aAAA/K,MAAA,WAUA,IAAAgL,EAAArO,KACAsO,EAAAC,SAAAC,eAAAxO,KAAA6N,QAAAY,IAAA,UACAlB,EAAAvN,KACAsO,EAAAtC,iBAAA,YAAA,SAAA3P,GACA,IAAAqS,EAAArS,EAAAuK,OAAA8H,GACAC,EAAA,aAAAtS,EAAAuK,OAAAgI,aAAA,QACArB,EAAAC,UAAA,CACAkB,GAAAA,EACAC,UAAAA,EACAE,EAAAxS,EAAAwS,EACAC,EAAAzS,EAAAyS,MAGAR,EAAAtC,iBAAA,UAAA,SAAA3P,GACAgS,EAAAU,SAAA,CACAF,EAAAxS,EAAAwS,EACAC,EAAAzS,EAAAyS,MAGAR,EAAAtC,iBAAA,YAAA,SAAA3P,GACAgS,EAAAL,QAAAK,EAAAW,SAAA,CACAH,EAAAxS,EAAAwS,EACAC,EAAAzS,EAAAyS,MAGAR,EAAAtC,iBAAA,aAAA,SAAA3P,GACAgS,EAAAL,QAAAK,EAAAY,eAEAX,EAAAtC,iBAAA,aAAA,SAAA3P,GACA,IAAAqS,EAAArS,EAAA6S,eAAA,GAAAtI,OAAA8H,GACAC,EAAA,aAAAtS,EAAA6S,eAAA,GAAAtI,OAAAgI,aAAA,QACArB,EAAAC,UAAA,CACAkB,GAAAA,EACAC,UAAAA,EACAE,EAAAxS,EAAA6S,eAAA,GAAAC,QACAL,EAAAzS,EAAA6S,eAAA,GAAAE,YAGAd,EAAAtC,iBAAA,YAAA,SAAA3P,GACAgS,EAAAL,QAAAK,EAAAW,SAAA,CACAH,EAAAxS,EAAA6S,eAAA,GAAAC,QACAL,EAAAzS,EAAA6S,eAAA,GAAAE,YAGAd,EAAAtC,iBAAA,WAAA,SAAA3P,GACAgS,EAAAU,SAAA,CACAF,EAAAxS,EAAA6S,eAAA,GAAAC,QACAL,EAAAzS,EAAA6S,eAAA,GAAAE,UAEAd,EAAAtC,iBAAA,cAAA,SAAA3P,GACAgS,EAAAL,QAAAK,EAAAY,mBA5DA,CAAAb,IAAA,YAAA/K,MAAA,SAiEAgM,GACA,IAAAxK,EAAA0J,SAAAC,eAAAa,EAAAX,IACA1O,KAAAsP,SAAAD,EAAAR,EACA7O,KAAAuP,SAAAF,EAAAP,EACA9O,KAAA8N,QAAAvI,SAAAV,EAAA2K,MAAAC,KAAA7F,MAAA,MAAA,IACA5J,KAAA+N,QAAAxI,SAAAV,EAAA2K,MAAAE,IAAA9F,MAAA,MAAA,IACA5J,KAAAgO,OAAAqB,EAAAX,GACA1O,KAAAiO,WAAAoB,EAAAV,YAxEA,CAAAP,IAAA,WAAA/K,MAAA,SA2EAgM,GACA,IAAAf,EAAAC,SAAAC,eAAAxO,KAAA6N,QAAAY,IAAA,UACAgB,EAAAlK,SAAApF,OAAAwP,iBAAArB,EAAA,MAAAsB,iBAAA,QAAAhG,MAAA,MAAA,IACAiG,EAAAtK,SAAApF,OAAAwP,iBAAArB,EAAA,MAAAsB,iBAAA,SAAAhG,MAAA,MAAA,IACA8F,EAAAnK,SAAApF,OAAAwP,iBAAArB,EAAA,MAAAsB,iBAAA,OAAAhG,MAAA,MAAA,IACAkG,EAAAvK,SAAApF,OAAAwP,iBAAArB,EAAA,MAAAsB,iBAAA,UAAAhG,MAAA,MAAA,IACAmG,EAAA/P,KAAAgQ,OAAAX,EAAAR,EACAoB,EAAAjQ,KAAAkQ,OAAAb,EAAAP,IAEAW,EAAAzP,KAAA6N,QAAAsC,KAAAC,OAAA,GAAA,EAAAL,IAAAF,EAAA7P,KAAA6N,QAAAsC,KAAAC,OAAA,GAAAL,EAAA,GAAA/P,KAAAiO,cAAAM,SAAAC,eAAAxO,KAAAgO,QAAAwB,MAAAC,KAAAzP,KAAA8N,SAAAuB,EAAAR,EAAA7O,KAAAsP,aACAI,EAAA1P,KAAA6N,QAAAsC,KAAAC,OAAA,GAAA,EAAAH,IAAAH,EAAA9P,KAAA6N,QAAAsC,KAAAC,OAAA,GAAAH,EAAA,GAAAjQ,KAAAiO,cAAAM,SAAAC,eAAAxO,KAAAgO,QAAAwB,MAAAE,IAAA1P,KAAA+N,SAAAsB,EAAAP,EAAA9O,KAAAuP,WAGAvP,KAAAiO,aACA1I,SAAApF,OAAAwP,iBAAArB,EAAA,MAAAsB,iBAAA,QAAAhG,MAAA,MAAA,IAAA5J,KAAA6N,QAAAsC,KAAAC,OAAA,IACA7B,SAAAC,eAAAxO,KAAAgO,QAAAwB,MAAAC,KAAAzP,KAAA6N,QAAAsC,KAAAC,OAAA,GAGA7K,SAAApF,OAAAwP,iBAAArB,EAAA,MAAAsB,iBAAA,OAAAhG,MAAA,MAAA,IAAA5J,KAAA6N,QAAAsC,KAAAE,QAAA,IACA9B,SAAAC,eAAAxO,KAAAgO,QAAAwB,MAAAE,IAAA1P,KAAA6N,QAAAsC,KAAAE,QAAA,GAGA9K,SAAApF,OAAAwP,iBAAArB,EAAA,MAAAsB,iBAAA,SAAAhG,MAAA,MAAA,IAAA5J,KAAA6N,QAAAsC,KAAAC,OAAA,IACA7B,SAAAC,eAAAxO,KAAAgO,QAAAwB,MAAAC,MAAAzP,KAAA6N,QAAAsC,KAAAC,OAAA,EAAApQ,KAAA6N,QAAAsC,KAAAG,WAGA/K,SAAApF,OAAAwP,iBAAArB,EAAA,MAAAsB,iBAAA,UAAAhG,MAAA,MAAA,IAAA5J,KAAA6N,QAAAsC,KAAAE,QAAA,IACA9B,SAAAC,eAAAxO,KAAAgO,QAAAwB,MAAAE,KAAA1P,KAAA6N,QAAAsC,KAAAE,QAAA,EAAArQ,KAAA6N,QAAAsC,KAAAI,YAIAvQ,KAAAgQ,OAAAX,EAAAR,EACA7O,KAAAkQ,OAAAb,EAAAP,IA3GA,CAAAV,IAAA,WAAA/K,MAAA,SA8GAgM,GACA,IAAAR,EAAA7O,KAAA8N,SAAAuB,EAAAR,EAAA7O,KAAAsP,UACAR,EAAA9O,KAAA+N,SAAAsB,EAAAP,EAAA9O,KAAAuP,UACAiB,EAAAxQ,KAAA6N,QAAAsC,KAAAM,UAAA5B,EAAAC,EAAA,aACA,GAAA9O,KAAAiO,WAAAjO,KAAA6N,QAAAsC,KAAAO,QAAA1Q,KAAAgO,QAAA2C,iBAAAH,EAAA3B,EAAA2B,EAAA1B,OACA,CACAP,SAAAC,eAAAxO,KAAAgO,QAAAwB,MAAAC,KAAA7F,MAAA,MAAA,GACA2E,SAAAC,eAAAxO,KAAAgO,QAAAwB,MAAAE,IAAA9F,MAAA,MAAA,GADA,IAEAgH,EAAA5Q,KAAA6N,QAAAsC,KAAAU,cACA1Q,OAAA2Q,SAAAC,KAAAH,EAAA/B,EAAA,IAAA+B,EAAA9B,EAEA9O,KAAAgO,QAAA,IAzHA,CAAAI,IAAA,aAAA/K,MAAA,WA6HAkL,SAAAC,eAAAxO,KAAAgO,QAAAwB,MAAAC,KAAAzP,KAAA8N,QACAS,SAAAC,eAAAxO,KAAAgO,QAAAwB,MAAAE,IAAA1P,KAAA+N,QACA/N,KAAAgO,QAAA,MA/HAN,EAAA,KAuIAxQ,KAAA8C,KAAAnD,EAAA,UAAA,oBAAAqD,KAAAA,KAAA,oBAAAC,OAAAA,OAAA,GAAAtD,EAAA,UAAAW,OAAA4C,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAA,aAAA,MCrGA,CAAAgJ,OAAA,EAAAoB,OAAAwG,IAAAA,EAAA,CAAA,SAAAnU,EAAAQ,EAAAJ,IAnCA,SAAAK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAT,EAAAJ,QAAA,WACA,SAAAgU,EAAAC,GAWA,OAXAtD,gBAAA5N,KAAAiR,GACAjR,KAAAmR,OAAAnR,KAAAoR,cAAA,CACA1C,GAAAwC,EAAAxC,KAAA,EACAvB,KAAA+D,EAAA/D,OAAA,EACAkE,KAAAH,EAAAG,OAAA,EACAC,MAAAJ,EAAAI,QAAA,EACAC,OAAAL,EAAAK,SAAA,IAEAvR,KAAAwR,OAAAxR,KAAAyR,cAAAP,EAAAF,OACAhR,KAAA0R,OAAA1R,KAAA2R,cAAAT,EAAAU,OAEA,CACAtD,MAAAtO,KAAAmR,OACAH,MAAAhR,KAAAwR,OACAI,MAAA5R,KAAA0R,OACAG,QAAA,GAhBA,OAAA1D,aAAA8C,EAAA,CAAA,CAAA7C,IAAA,gBAAA/K,MAAA,SAqBAiL,GACA,OAAA7E,OAAAqI,OACAxD,EACA,CACAnB,KAAAmB,EAAAnB,KAAAmB,EAAAnB,KAAA,QACAkE,KAAA/C,EAAA+C,KAAA/C,EAAA+C,KAAA,iBACAC,MAAAhD,EAAAgD,MAAAhD,EAAAgD,MAAA,IACAC,OAAAjD,EAAAiD,OAAAjD,EAAAiD,OAAA,QA5BA,CAAAnD,IAAA,gBAAA/K,MAAA,SAgCA2N,GAAA,IAAAe,EAAA/R,KAEA,MAAA,gBAAAgR,EACAA,EAGA,GAAAvM,OAAAuN,mBAAA/T,MAAA+S,EAAAiB,OAAA,OAAAC,IAAA,SAAArN,EAAAyE,GAEA,IAAAwH,EAAAiB,EAAAI,mBAEAC,EAAA,GAJAC,GAAA,EAAAC,GAAA,EAAAC,OAAAtN,EAAA,IAMA,IAAA,IAAAuN,EAAAC,EAAAhJ,OAAAiJ,KAAA1B,EAAA2B,SAAAC,OAAAC,cAAAR,GAAAG,EAAAC,EAAAK,QAAAC,MAAAV,GAAA,EAAA,CAAA,IAAAjE,EAAAoE,EAAAnP,MACApF,MAAAqD,QAAA0P,EAAA2B,QAAAvE,IACAgE,EAAAhE,GAAA2D,EAAAiB,oBAAAhC,EAAA2B,QAAAvE,IAGAgE,EAAAhE,GAAA4C,EAAA2B,QAAAvE,IAXA,MAAApE,GAAAsI,GAAA,EAAAC,EAAAvI,EAAA,QAAA,KAAAqI,GAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,QAAA,GAAAX,EAAA,MAAAC,GAeA,OAAA9I,OAAAqI,OACA,CACApD,GAAApF,GAEAwH,EACAsB,OA1DA,CAAAhE,IAAA,gBAAA/K,MAAA,SAgEAuO,GACA,OAAAA,IAjEA,CAAAxD,IAAA,sBAAA/K,MAAA,SAoEA6P,GACA,OAAAA,EAAA7Q,KAAA6H,MAAA7H,KAAA8Q,SAAAD,EAAA/V,WArEA,CAAAiR,IAAA,mBAAA/K,MAAA,WAyEA,MAAA,CACAwL,EAAAxM,KAAA6H,MAAA7H,KAAA8Q,UAAAnT,KAAAmR,OAAAG,MAAA,IAAAtR,KAAAmR,OAAAG,MAAA,EACAxC,EAAAzM,KAAA6H,MAAA7H,KAAA8Q,UAAAnT,KAAAmR,OAAAI,OAAA,IAAAvR,KAAAmR,OAAAI,OAAA,OA3EAN,EAAA,KAgFA/T,KAAA8C,KAAAnD,EAAA,UAAA,oBAAAqD,KAAAA,KAAA,oBAAAC,OAAAA,OAAA,GAAAtD,EAAA,UAAAW,OAAA4C,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAA,gBAAA,MCzEA,CAAAgJ,OAAA,EAAAoB,OAAA,IAAA4I,EAAA,CAAA,SAAAvW,QAAAQ,OAAAJ,UARA,SAAAK,QAAAC,OAAAC,OAAAC,YAAAC,YAAAC,YAAAC,YAAAC,WAAAC,WACAT,OAAAJ,QAAA,WACA,SAAAoW,SAAAzF,gBAAA5N,KAAAqT,QADA,OAAAlF,aAAAkF,OAAA,CAAA,CAAAjF,IAAA,aAAA/K,MAAA,SAOAiQ,EAAA9D,EAAA+D,GACA,IAAAC,OAAA,IAAAhE,EAAArS,OAAAqS,EAAA/F,OAAAgK,QAAAjE,GADAkE,GAAA,EAAAC,GAAA,EAAAC,OAAA3O,EAAA,IAEA,IAAA,IAAA4O,EAAAC,EAAAN,EAAAZ,OAAAC,cAAAa,GAAAG,EAAAC,EAAAhB,QAAAC,MAAAW,GAAA,EAAAlE,EAAAqE,EAAAxQ,MACAiQ,EAAA9D,MAAAA,EAAA,IAAAxP,KAAA+T,cAAAvE,EAAA,GAAA+D,GAHA,MAAAvJ,GAAA2J,GAAA,EAAAC,EAAA5J,EAAA,QAAA,KAAA0J,GAAAI,EAAAb,QAAAa,EAAAb,SAAA,QAAA,GAAAU,EAAA,MAAAC,GAKA,OAAAN,IAZA,CAAAlF,IAAA,gBAAA/K,MAAA,SAAA0Q,cAkBA1Q,MAAAkQ,QAEA,IADA,GAAAlQ,MAAA2Q,QAAA,OAAA3Q,MAAAA,MAAAtC,QAAA,SAAAwS,OAAA/W,GAAAuE,QAAA,SAAAwS,OAAAU,GAAAlT,QAAA,SAAAwS,OAAAjP,KACA,GAAAjB,MAAA2Q,QAAA,KAAA,CACA,IAAAE,MAAA7Q,MAAA8Q,MAAA,gBADAC,4BAAA,EAAAC,oBAAA,EAAAC,qBAAArP,EAAA,IAEA,IAAA,IAAAsP,WAAAL,MAAAtB,OAAAC,YAAA2B,SAAAJ,4BAAAI,OAAAD,WAAAzB,QAAAC,MAAAqB,4BAAA,EAAA,CAAA,IAAAD,MAAAK,OAAAnR,MACAA,MAAAA,MAAAtC,QAAAoT,MAAAM,KAAAN,SAHA,MAAAnK,GAAAqK,oBAAA,EAAAC,gBAAAtK,EAAA,QAAA,KAAAoK,4BAAAG,WAAAtB,QAAAsB,WAAAtB,SAAA,QAAA,GAAAoB,mBAAA,MAAAC,kBAMA,OAAAjR,QA1BA,CAAA+K,IAAA,qBAAA/K,MAAA,SAgCAqR,GACA,IAAAjB,EAAAhK,OAAAgK,QAAAiB,GACAC,EAAA,GAFAC,GAAA,EAAAC,GAAA,EAAAC,OAAA7P,EAAA,IAGA,IAAA,IAAA8P,EAAAC,EAAAvB,EAAAb,OAAAC,cAAA+B,GAAAG,EAAAC,EAAAlC,QAAAC,MAAA6B,GAAA,EAAA,CACA,IADA,IAAAK,EAAAF,EAAA1R,MACAvG,EAAA,EAAAA,EAAAmY,EAAA,GAAA9X,OAAAL,IACAmY,EAAA,GAAA5V,OAAAvC,KAAAmY,EAAA,GAAA5V,OAAAvC,GAAAoY,gBACAD,EAAA,GAAAA,EAAA,GAAA3O,MAAA,EAAAxJ,GAAA,IAAAmY,EAAA,GAAA3O,MAAAxJ,EAAAmY,EAAA,GAAA9X,QAAAkH,eAGAsQ,EAAApV,KAAA0V,EAAA,GAAA,KAAAA,EAAA,KATA,MAAAjL,GAAA6K,GAAA,EAAAC,EAAA9K,EAAA,QAAA,KAAA4K,GAAAI,EAAA/B,QAAA+B,EAAA/B,SAAA,QAAA,GAAA4B,EAAA,MAAAC,GAWA,OAAAH,EAAAzL,KAAA,QA3CA,CAAAkF,IAAA,gBAAA/K,MAAA,SA8CAwB,EAAAxB,EAAA8R,EAAAC,GACA,IAAAlT,EAAA2C,EAAA2K,MAAAnM,GAAAuG,MAAA,MAAA,GACAyL,EAAAF,EAAAjT,EAEAoT,EAAA,GAQA,SAAAC,IAEA,IATAjZ,EAAAgI,EAAAqB,EASA9C,GATAvG,EAQAgZ,GAVA,GAEAhR,EASApC,EATAyD,EASA0P,GARA/Y,GAQA8Y,EARA,GACA,EAAAzP,EAAA,EAAArJ,EAAAA,EAAAgI,GAEAqB,EAAA,KADArJ,GACAA,EAAA,GAAA,GAAAgI,GAOAO,EAAA2K,MAAAnM,GAAAiS,GAAAF,EAAAD,EAAAK,WAAAtT,GAAAsT,WAAA3S,GACAyS,EAAAF,GACA7I,WAAAgJ,EAfA,IAkBAA,OAnEAlC,OAAA,KAuEAnW,KAAA8C,KAAAnD,QAAA,UAAA,oBAAAqD,KAAAA,KAAA,oBAAAC,OAAAA,OAAA,GAAAtD,QAAA,UAAAW,OAAA4C,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAA,aAAA,MArCA,CAAAgJ,OAAA,EAAAoB,OAAAmK,IAAAc,EAAA,CAAA,SAAA5Y,EAAAQ,EAAAJ,ICnCA,SAAAK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAjB,EAAA,eAEAQ,EAAAJ,QAAA,WACA,SAAAyY,EAAA/H,GAAAC,gBAAA5N,KAAA0V,GACA1V,KAAA6N,QAAAF,EACA3N,KAAA2V,aAHA,OAAAxH,aAAAuH,EAAA,CAAA,CAAAtH,IAAA,aAAA/K,MAAA,WAUA,IAAAkK,EAAAvN,KAEA,GADAA,KAAA4V,kBAAA,EACA,oBAAAC,GAAA,CACA3O,QAAAC,IAAA,kDACAnH,KAAA8V,gBAAA,EACA9V,KAAA+V,QAAA,CACA9I,KAAA,WACA,OAAA,IAGA,IAAA+I,EAAAhW,KAAA6N,QAAAoI,QACA1I,EAAA2I,OAAAF,QAGAhW,KAAA8V,gBAAA,EACA9V,KAAA+V,QAAAF,GAAAM,QAAA,8BACAnW,KAAA+V,QAAAnJ,GAAA,UAAA,WACAW,EAAA6I,sBAEApW,KAAA+V,QAAAnJ,GAAA,aAAA,WACAW,EAAA8I,yBAEArW,KAAA+V,QAAAnJ,GAAA,QAAA,SAAA5C,GACAuD,EAAA+I,cAAAtM,KAEAhK,KAAA+V,QAAAnJ,GAAA,eAAA,SAAAlG,GACA6G,EAAAgJ,eAAA7P,KAEA1G,KAAA+V,QAAAnJ,GAAA,OAAA,SAAAlG,GACA6G,EAAA2I,OAAAxP,KAEA1G,KAAA+V,QAAAnJ,GAAA,OAAA,SAAAlG,GACA6G,EAAAiJ,OAAA9P,KAEA1G,KAAA+V,QAAAnJ,GAAA,MAAA,SAAAlG,GACA6G,EAAAkJ,MAAA/P,KAEA1G,KAAA+V,QAAAnJ,GAAA,UAAA,SAAAlG,GACA6G,EAAAM,QAAAsC,KAAAuG,cAEA1W,KAAA+V,QAAAnJ,GAAA,QAAA,SAAAlG,GACA6G,EAAAM,QAAAsC,KAAAwG,YAAAjQ,OAnDA,CAAA0H,IAAA,iBAAA/K,MAAA,SA2DAqD,GACA1G,KAAA6N,QAAA+I,SAAAlQ,KA5DA,CAAA0H,IAAA,SAAA/K,MAAA,SAkEAqD,GACA1G,KAAA6N,QAAAgJ,SAAAnQ,KAnEA,CAAA0H,IAAA,SAAA/K,MAAA,SAyEAqD,GAAA,IAAAoQ,GAAA,EAAAC,GAAA,EAAAC,OAAA/R,EAAA,IACA,IAAA,IAAAgS,EAAAC,EAAAxQ,EAAAkM,OAAAC,cAAAiE,GAAAG,EAAAC,EAAApE,QAAAC,MAAA+D,GAAA,EAAA,CAAA,IAAAK,EAAAF,EAAA5T,MACA8T,EAAAC,KAAApX,KAAA6N,QAAAsC,KAAAO,QAAAyG,EAAAzI,IAAA2I,kBAAAF,EAAAtI,EAAAsI,EAAArI,EAAAqI,EAAAC,MACApX,KAAA6N,QAAAsC,KAAAO,QAAAyG,EAAAzI,IAAA2I,kBAAAF,EAAAtI,EAAAsI,EAAArI,IAHA,MAAA9E,GAAA+M,GAAA,EAAAC,EAAAhN,EAAA,QAAA,KAAA8M,GAAAI,EAAAjE,QAAAiE,EAAAjE,SAAA,QAAA,GAAA8D,EAAA,MAAAC,MAzEA,CAAA5I,IAAA,QAAA/K,MAAA,SAmFAqD,GACA1G,KAAA6N,QAAAsC,KAAAmH,QAAA5Q,KApFA,CAAA0H,IAAA,oBAAA/K,MAAA,WA2FArD,KAAA4V,kBAAA,EACA1O,QAAAC,IAAAnH,KAAA6N,QAAAY,IAAA7E,MAAA,KAAA,GAAA,yBACA5J,KAAAuX,iBA7FA,CAAAnJ,IAAA,eAAA/K,MAAA,WAoGA6D,QAAAC,IAAA,kBACAnH,KAAA+V,QAAA9I,KAAA,eAAA,CAAAyB,GAAA1O,KAAA6N,QAAAY,QArGA,CAAAL,IAAA,uBAAA/K,MAAA,WA4GArD,KAAA4V,kBAAA,EACA1O,QAAAC,IAAAnH,KAAA6N,QAAAY,IAAA,2BA7GA,CAAAL,IAAA,gBAAA/K,MAAA,SAmHA2G,GACAhK,KAAA4V,kBAAA,EACA1O,QAAAC,IAAAqQ,WArHA9B,EAAA,KAyHAxY,KAAA8C,KAAAnD,EAAA,UAAA,oBAAAqD,KAAAA,KAAA,oBAAAC,OAAAA,OAAA,GAAAtD,EAAA,UAAAW,OAAA4C,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAA,aAAA,MAnEA,CAAAqX,cAAA,EAAArO,OAAA,EAAAoB,OAAA,IAAAkN,EAAA,CAAA,SAAA7a,EAAAQ,EAAAJ,ICzDA,SAAAK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAT,EAAAJ,QAAA,WAMA,SAAA0a,EAAA/F,EAAAjE,GAAAC,gBAAA5N,KAAA2X,GACA3X,KAAA6N,QAAAF,EACA3N,KAAAwR,OAAA,IAAAoG,IACA5X,KAAA6X,QAAA,IAAAD,IACA5X,KAAA8X,SAAAlG,GAVA,OAAAzD,aAAAwJ,EAAA,CAAA,CAAAvJ,IAAA,WAAA/K,MAAA,SAgBAuO,GAAA,IAAAmG,EAAA/X,KAAAgY,EAAA,SACAnT,GACA,OAAAA,EAAAuJ,KACA,IAAA,MACA2J,EAAAF,QAAAzQ,IAAA,SAAAvC,EAAAjG,KAAAiG,EAAA6J,GAAA7J,EAAAjG,KAAA,CACApC,EAAAqI,EAAAxB,MAAAuG,MAAA,KAAA,GACAqK,EAAApP,EAAAxB,MAAAuG,MAAA,KAAA,GACAtF,EAAAO,EAAAxB,MAAAuG,MAAA,KAAA,KAEA,MAEA,QACAmO,EAAAvG,OAAAyG,IAAApT,EAAAjG,OACAmZ,EAAAvG,OAAApK,IAAAvC,EAAAjG,KAAAgT,EAAAsG,OAAA,SAAAC,GAAA,OAAAA,EAAAvZ,MAAAiG,EAAAjG,OAAAsT,IAAA,SAAArN,GAAA,MAAA,CAAAA,EAAAuJ,IAAAvJ,EAAAxB,YAbA+U,GAAA,EAAAC,GAAA,EAAAC,OAAArT,EAAA,IACA,IAAA,IAAAsT,EAAAC,EAAA5G,EAAAgB,OAAAC,cAAAuF,GAAAG,EAAAC,EAAA1F,QAAAC,MAAAqF,GAAA,EAAA,CAAAJ,EAAAO,EAAAlV,QADA,MAAA2G,GAAAqO,GAAA,EAAAC,EAAAtO,EAAA,QAAA,KAAAoO,GAAAI,EAAAvF,QAAAuF,EAAAvF,SAAA,QAAA,GAAAoF,EAAA,MAAAC,MAhBA,CAAAlK,IAAA,aAAA/K,MAAA,SAuCAiQ,EAAA1U,EAAA2U,GAEA,OAAAvT,KAAAwR,OAAAyG,IAAArZ,GAEAoB,KAAA6N,QAAAwF,OAAAoF,WAAAnF,EAAAtT,KAAA0Q,QAAA9R,GAAA2U,GAEAD,IA7CA,CAAAlF,IAAA,kBAAA/K,MAAA,SAmDAiQ,GAEA,OADAA,EAAA9D,MAAAkJ,WAAA1Y,KAAA2Y,YAAA,cACArF,IArDA,CAAAlF,IAAA,UAAA/K,MAAA,SA2DAzE,GAEA,OAAAoB,KAAAwR,OAAAvK,IAAArI,KA7DA,CAAAwP,IAAA,WAAA/K,MAAA,SAmEA+K,GACA,OAAApO,KAAA6X,QAAA5Q,IAAAmH,KApEA,CAAAA,IAAA,cAAA/K,MAAA,SA0EA+K,GACA,IAAAwK,EAAA5Y,KAAA6X,QAAA5Q,IAAAmH,GACA,MAAA,OAAAwK,EAAApc,EAAA,IAAAoc,EAAA3E,EAAA,IAAA2E,EAAAtU,EAAA,QA5EAqT,EAAA,KAgFAza,KAAA8C,KAAAnD,EAAA,UAAA,oBAAAqD,KAAAA,KAAA,oBAAAC,OAAAA,OAAA,GAAAtD,EAAA,UAAAW,OAAA4C,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAA,YAAA,MD9EA,CAAAgJ,OAAA,EAAAoB,OAAA,IAAAqO,GAAA,CAAA,SAAAhc,EAmGAQ,EAAAJ,IEtGA,SAAAK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAT,EAAAJ,QAAA,WACA,SAAAkT,EAAA5C,GAAAK,gBAAA5N,KAAAmQ,GACAnQ,KAAA6N,QAAAN,EACAvN,KAAAwR,OAAA,IAAAoG,IACA5X,KAAA8Y,YAAA,IAAAC,IACA/Y,KAAAgZ,UACAhZ,KAAAiZ,WACAjZ,KAAAkZ,iBACAlZ,KAAAmZ,YARA,OAAAhL,aAAAgC,EAAA,CAAA,CAAA/B,IAAA,UAAA/K,MAAA,WAeArD,KAAAoZ,YAAA,CACA9H,MAAA,OACAC,OAAA,OACA8H,SAAA,SACAC,SAAA,YAGAtZ,KAAAuZ,UAAA,CACAjI,MAAA,OACAC,OAAA,OACA+H,SAAA,WACAZ,WAAA,WA1BA,CAAAtK,IAAA,WAAA/K,MAAA,WAkCA,IAAAmW,EAAAjL,SAAAC,eAAAxO,KAAA6N,QAAA4L,OACAC,EAAAnL,SAAAoL,cAAA,OACAD,EAAAhL,GAAA1O,KAAA6N,QAAAY,IAAA,WACAiL,EAAAE,UAAA,UACA5Z,KAAA6N,QAAAwF,OAAAoF,WAAAiB,EAAA1Z,KAAAoZ,aACA,IAAA9K,EAAAC,SAAAoL,cAAA,OACArL,EAAAI,GAAA1O,KAAA6N,QAAAY,IAAA,SACAzO,KAAA6N,QAAAwF,OAAAoF,WAAAnK,EAAAtO,KAAAuZ,WACA,IAAAM,EAAAtL,SAAAoL,cAAA,OACAE,EAAAnL,GAAA,UACAmL,EAAAD,UAAA,cACA,IAAAE,EAAAvL,SAAAoL,cAAA,OACAI,EAAAxL,SAAAoL,cAAA,OACAK,EAAAzL,SAAAoL,cAAA,OACAG,EAAAF,UAAA,UACAE,EAAApL,GAAA,UACAqL,EAAAH,UAAA,OACAI,EAAAJ,UAAA,OACAE,EAAAG,YAAAF,GACAD,EAAAG,YAAAD,GACAN,EAAAO,YAAA3L,GACApH,QAAAC,IAAA,WACAqS,EAAAU,UAAA,GAEAhT,QAAAC,IAAA,UACAqS,EAAAS,YAAAP,GACAF,EAAAS,YAAAJ,GACAL,EAAAS,YAAAH,KA7DA,CAAA1L,IAAA,UAAA/K,MAAA,SAmEAwB,GACAqC,QAAAC,IAAA,eACAnH,KAAAma,QAAAtV,EAAA6J,GAAA,IAAA1O,KAAA6N,QAAAc,UAAA9J,EAAAjE,MAAAiE,EAAA7E,KAAA6N,UACA7N,KAAAoa,gBAtEA,CAAAhM,IAAA,YAAA/K,MAAA,WA4EA,IAAAgX,EAAAra,KACAuN,EAAAvN,KACAoK,EAAAmE,SAAAoL,cAAA,OACAvP,EAAAwP,UAAA,UACAxP,EAAA8P,UAAA,iBACAla,KAAA6N,QAAAY,IADA,4BAGA,IAAA6L,EAAA/L,SAAAoL,cAAA,UACAW,EAAAJ,UAAA,SACA9P,EAAAsE,GAAA,UACA4L,EAAAtO,iBAAA,QAAA,WACA9E,QAAAC,IAAA,UAAAoH,SAAAgM,uBAAA,YACAhM,SAAAgM,uBAAA,WAAAC,UAAA,GACAjM,SAAAC,eAAA6L,EAAAxM,QAAAY,IAAA,UAAAgM,YAAAlM,SAAAC,eAAA,YACAjB,EAAAM,QAAA6H,OAAAK,QAAA9I,KAAA,QAAA,CAAAyB,GAAAnB,EAAAM,QAAAY,QAGArE,EAAA6P,YAAAK,GAEA/L,SAAAC,eAAAxO,KAAA6N,QAAAY,IAAA,UAAAwL,YAAA7P,GACApK,KAAA0a,WAhGA,CAAAtM,IAAA,YAAA/K,MAAA,WAuGA,IAAAkK,EAAAvN,KACAG,OAAAwa,SAAA,SAAAC,GACArN,EAAA2L,iBACA3L,EAAAsN,kBA1GA,CAAAzM,IAAA,UAAA/K,MAAA,SAiHAiO,EAAAC,GACAvR,KAAAoQ,OAAAkB,EACAtR,KAAAqQ,QAAAkB,EACA,IAAAjD,EAAAC,SAAAC,eAAAxO,KAAA6N,QAAAY,IAAA,UACAH,EAAAkB,MAAA8B,MAAAtR,KAAAoQ,OAAA,KACA9B,EAAAkB,MAAA+B,OAAAvR,KAAAqQ,QAAA,KACA/B,EAAAkB,MAAAsL,OAAA,IAAA9a,KAAAqQ,QAAA,EAAA,OAAArQ,KAAAoQ,OAAA,EAAA,OAvHA,CAAAhC,IAAA,cAAA/K,MAAA,SA6HAwL,EAAAC,GACA9O,KAAA+a,GAAAlM,EACA7O,KAAAgb,GAAAlM,EACA9O,KAAA6a,iBAhIA,CAAAzM,IAAA,cAAA/K,MAAA,WAuIA,IAAAiL,EAAAC,SAAAC,eAAAxO,KAAA6N,QAAAY,IAAA,UACA,MAAA,CACAI,EAAAxM,KAAA6H,MAAA3E,SAAA+I,EAAAkB,MAAAC,KAAA7F,MAAA,MAAA,IAAA5J,KAAAsQ,UAAA,GACAxB,EAAAzM,KAAA6H,MAAA3E,SAAA+I,EAAAkB,MAAAE,IAAA9F,MAAA,MAAA,IAAA5J,KAAAuQ,UAAA,MA1IA,CAAAnC,IAAA,iBAAA/K,MAAA,WA+IAkL,SAAAC,eAAAxO,KAAA6N,QAAAY,IAAA,YACAzO,KAAAsQ,UAAA/B,SAAAC,eAAAxO,KAAA6N,QAAA4L,OAAAwB,YACAjb,KAAAuQ,UAAAhC,SAAAC,eAAAxO,KAAA6N,QAAA4L,OAAAyB,eAjJA,CAAA9M,IAAA,eAAA/K,MAAA,WAqJA,IAAAiL,EAAAC,SAAAC,eAAAxO,KAAA6N,QAAAY,IAAA,UACAH,EAAAkB,MAAAE,IAAAnK,SAAAvF,KAAAuQ,UAAA,GAAAhL,SAAAvF,KAAAgb,IAAA,KACA1M,EAAAkB,MAAAC,KAAAlK,SAAAvF,KAAAsQ,UAAA,GAAA/K,SAAAvF,KAAA+a,IAAA,OAvJA,CAAA3M,IAAA,WAAA/K,MAAA,WA2JArD,KAAA6N,QAAA8J,MAAAwD,gBAAA5M,SAAAC,eAAAxO,KAAA6N,QAAAY,IAAA,aA3JA,CAAAL,IAAA,UAAA/K,MAAA,SA8JAqL,EAAA0M,GACApb,KAAAwR,OAAApK,IAAAsH,EAAA0M,KA/JA,CAAAhN,IAAA,UAAA/K,MAAA,SAkKAqL,GACA,OAAA1O,KAAAwR,OAAAvK,IAAA1B,SAAAmJ,MAnKA,CAAAN,IAAA,YAAA/K,MAAA,SAsKAwL,EAAAC,EAAAlI,GACA,GAAA,SAAAA,EAAA,CACA,IAAA0H,EAAAC,SAAAC,eAAAxO,KAAA6N,QAAAY,IAAA,UACA,MAAA,CACAI,EAAAA,EAAAtJ,SAAA+I,EAAAkB,MAAA8B,MAAA1H,MAAA,MAAA,IAAA,EACAkF,EAAAA,EAAAvJ,SAAA+I,EAAAkB,MAAA+B,OAAA3H,MAAA,MAAA,IAAA,GAIA,IAAA0E,EAAAC,SAAAC,eAAAxO,KAAA6N,QAAAY,IAAA,UACA,MAAA,CACAI,EAAAA,EAAAtJ,SAAA+I,EAAAkB,MAAA8B,MAAA1H,MAAA,MAAA,IAAA,EACAkF,EAAAA,EAAAvJ,SAAA+I,EAAAkB,MAAA+B,OAAA3H,MAAA,MAAA,IAAA,KAlLA,CAAAwE,IAAA,cAAA/K,MAAA,SAuLAwW,GACAtL,SAAAC,eAAA,WAAA0L,UAAAL,EAAAwB,QAAA,YAxLA,CAAAjN,IAAA,WAAA/K,MAAA,WA4LAkL,SAAAC,eAAA,WAAAgB,MAAA8L,QAAA,SA5LA,CAAAlN,IAAA,SAAA/K,MAAA,WAmMAkL,SAAAgM,uBAAA,WAAA,GAAA/K,MAAA+L,QAAA,IAnMA,CAAAnN,IAAA,cAAA/K,MAAA,WAuMAkL,SAAAgM,uBAAA,eAAA,GAAA/K,MAAA+L,QAAA,IAvMA,CAAAnN,IAAA,cAAA/K,MAAA,WA2MArD,KAAAwb,WACA,IAFA,IAAA7U,EAAA,GAAAlC,OAAAuN,mBAEAhS,KAAAwR,OAAAiK,WAAAC,EAAA,EAAAA,EAAA/U,EAAAxJ,OAAAue,IAAA,CAAA,IAAA7W,EAAAA,EAAAA,GACA,IAAA0J,SAAAC,eAAA3J,EAAA6L,UAAAhC,IAAA,CACA,IAAAJ,EAAAC,SAAAC,eAAAxO,KAAA6N,QAAAY,IAAA,UACAkN,EAAA9W,EAAA6L,UACApC,EAAA2L,YAAA0B,OAhNA,CAAAvN,IAAA,cAAA/K,MAAA,SAwNAuW,EAAAgC,GACA,IAAApM,EAAAjB,SAAAoL,cAAA,SACAnK,EAAA5O,KAAA,WACA4O,EAAA0K,UAAA,IAAAN,EAAA,MAAA5Z,KAAA6N,QAAAwF,OAAAwI,mBAAAD,GAAA,KACArN,SAAAuN,qBAAA,QAAA,GAAA7B,YAAAzK,GACAxP,KAAA8Y,YAAAiD,IAAAnC,KA7NA,CAAAxL,IAAA,WAAA/K,MAAA,SAmOAuW,GACA,OAAA5Z,KAAA8Y,YAAAb,IAAA2B,OApOAzJ,EAAA,KAuOAjT,KAAA8C,KAAAnD,EAAA,UAAA,oBAAAqD,KAAAA,KAAA,oBAAAC,OAAAA,OAAA,GAAAtD,EAAA,UAAAW,OAAA4C,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAA,WAAA,MAlLA0Z,CAAAA,OAAAA,EAAAA,OAAAG,IAAAA,GAAAA,CAAA,SAAApd,EAAAQ,EAAAJ,ICtDA,SAAAK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAjB,EAAA,aAEAQ,EAAAJ,QAAA,WACA,SAAA+e,EAAAC,EAAAtO,GAAAC,gBAAA5N,KAAAgc,GACAhc,KAAA6N,QAAAF,EACA3N,KAAAyO,IAAAwN,EAAAvN,GACA1O,KAAA+a,GAAAkB,EAAApN,EACA7O,KAAAgb,GAAAiB,EAAAnN,EACA9O,KAAAkc,MAAA,YANA,OAAA/N,aAAA6N,EAAA,CAAA,CAAA5N,IAAA,OAAA/K,MAAA,WAaArD,KAAAmc,cAAA,CACA7C,SAAA,WACA8C,UAAA,wBACAC,OAAA,UACAC,QAAA,MACAC,WAAA,UAlBA,CAAAnO,IAAA,UAAA/K,MAAA,WA0BA,IAAA7G,EAAAwD,KAAA6N,QAAA8J,MAAA6E,SAAAxc,KAAAyc,QAAAjgB,EACAyX,EAAAjU,KAAA6N,QAAA8J,MAAA6E,SAAAxc,KAAAyc,QAAAxI,EACA3P,EAAAtE,KAAA6N,QAAA8J,MAAA6E,SAAAxc,KAAAyc,QAAAnY,EACAqX,EAAApN,SAAAoL,cAAA,OACA+C,EAAA1c,KAAA6N,QAAAsC,KAAAM,UAAAzQ,KAAA+a,GAAA/a,KAAAgb,GAAA,SASA,OARAW,EAAAjN,GAAA1O,KAAAyO,IACAkN,EAAA/B,UAAA5Z,KAAAkc,MACAP,EAAAzB,UAAAla,KAAA2c,MACAhB,EAAAnM,MAAAE,IAAAgN,EAAA5N,EACA6M,EAAAnM,MAAAC,KAAAiN,EAAA7N,EACA8M,EAAAiB,aAAA,OAAA,aACA5c,KAAA6N,QAAAwF,OAAAoF,WAAAkD,EAAA3b,KAAA6c,cAAA,CAAArgB,EAAAA,EAAAyX,EAAAA,EAAA3P,EAAAA,IACAtE,KAAA6N,QAAA8J,MAAAmF,WAAAnB,EAAA,SAAA,CAAAnf,EAAAA,EAAAyX,EAAAA,EAAA3P,EAAAA,IACAqX,IAvCA,CAAAvN,IAAA,mBAAA/K,MAAA,SA6CAwL,EAAAC,GACA9O,KAAA+a,GAAAlM,EACA7O,KAAAgb,GAAAlM,EACA5H,QAAAC,IAAAnH,KAAAkc,MAAA,IAAAlc,KAAAyO,IAAA,OAAApM,KAAA6H,MAAA2E,GAAA,OAAAxM,KAAA6H,MAAA4E,GAAA,KACA9O,KAAA6N,QAAA6H,OAAAK,QAAA9I,KAAA,OAAA,CACAyB,GAAA1O,KAAAyO,IACAI,EAAA7O,KAAA+a,GACAjM,EAAA9O,KAAAgb,OApDA,CAAA5M,IAAA,oBAAA/K,MAAA,SA2DAwL,EAAAC,EAAAsI,GACApX,KAAA+a,GAAAlM,EACA7O,KAAAgb,GAAAlM,EACA9O,KAAA+c,mBAAA3F,GACA,mBAAApX,KAAAgd,eAAAhd,KAAAgd,kBA/DA,CAAA5O,IAAA,qBAAA/K,MAAA,SAqEA+T,GACA,IAAAsF,EAAA1c,KAAA6N,QAAAsC,KAAAM,UAAAzQ,KAAA+a,GAAA/a,KAAAgb,GAAA,SACAnW,EAAA0J,SAAAC,eAAAxO,KAAAyO,KAEAzO,KAAA6N,QAAAwF,OAAA4J,cAAApY,EAAA,OAAA6X,EAAA7N,EAAAuI,GAAA,KACApX,KAAA6N,QAAAwF,OAAA4J,cAAApY,EAAA,MAAA6X,EAAA5N,EAAAsI,GAAA,SA1EA4E,EAAA,KAkFA9e,KAAA8C,KAAAnD,EAAA,UAAA,oBAAAqD,KAAAA,KAAA,oBAAAC,OAAAA,OAAA,GAAAtD,EAAA,UAAAW,OAAA4C,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAA,0BAAA,eDpFA,CAAA8c,YAAA,EAAA9T,OAAA,EAAAoB,OAAA,IA6HAsE,GAAA,CAAA,SAAAjS,EAAAQ,EAAAJ,IE9HA,SAAAK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAke,EAAAnf,EAAA,kBAEAQ,EAAAJ,QAAA,SAAAkgB,GACA,SAAAC,EAAAnB,EAAAtO,GAAAC,gBAAA5N,KAAAod,GAAA,IAAAC,EAAAC,2BAAAtd,MAAAod,EAAAG,WAAA9T,OAAA+T,eAAAJ,IAAAlgB,KAAA8C,KACAic,EAAAtO,IADA,OAEA0P,EAAAV,MAAAV,EAAAwB,KACAJ,EAAAZ,OAAAR,EAAArD,MACAyE,EAAAnB,MAAA,SACAmB,EAAAxP,QAAAsC,KAAAuN,SAAAL,EAAAnB,QAAAmB,EAAAM,OACAN,EAAAO,aANAP,EADA,OAAAQ,UAAAT,EAAApB,GAAA7N,aAAAiP,EAAA,CAAA,CAAAhP,IAAA,OAAA/K,MAAA,WAcAgH,KAAA+S,EAAArY,UAAAwY,WAAA9T,OAAA+T,eAAAJ,EAAArY,WAAA,OAAA/E,MAAA9C,KAAA8C,MAIAA,KAAAmc,cAAA1S,OAAAqI,OAAA,CACAgM,UAAA,SACAC,SAAA,OACAC,WAAA,OACApF,MAAA,mBACArH,OAAA,OACA0M,QAAA,yBACAje,KAAAmc,eAIAnc,KAAA6N,QAAAsC,KAAA+N,YAAAle,KAAAkc,MAAAlc,KAAAmc,iBA7BA,CAAA/N,IAAA,aAAA/K,MAAA,WAiCArD,KAAA6c,cAAA,CACAjE,MAAA,sBAlCA,CAAAxK,IAAA,gBAAA/K,MAAA,WAuCA,IAAA8a,EAAA5P,SAAAoL,cAAA,OACApM,EAAAvN,KACAme,EAAAzP,GAAA,SAAA1O,KAAAyO,IACA0P,EAAAvE,UAAA,QACAuE,EAAA3O,MAAA4O,YAAA,OAAApe,KAAA6N,QAAA8J,MAAA6E,SAAAxc,KAAAyc,QAAA,IACAlO,SAAAC,eAAAxO,KAAAyO,KAAAwL,YAAAkE,GACA5R,WAAA,WAAAgC,SAAAC,eAAAjB,EAAAkB,KAAAgM,YAAA0D,IAAA,SA7CAf,EAAA,KAiDAlgB,KAAA8C,KAAAnD,EAAA,UAAA,oBAAAqD,KAAAA,KAAA,oBAAAC,OAAAA,OAAA,GAAAtD,EAAA,UAAAW,OAAA4C,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAA,uBAAA,eFuHAyO,CAAAA,iBAAAA,GAAAtJ,OAAA+I,EAAAA,OAAA,IAAAgD,GAAA1H,CAAAA,SAAA/M,EAAAQ,EADAJ,IG1KA,SAAAK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAsf,EAAAvgB,EAAA,eAEAQ,EAAAJ,QAAA,CACAmgB,OAAAA,KAEAlgB,KAAA8C,KAAAnD,EAAA,UAAA,oBAAAqD,KAAAA,KAAA,oBAAAC,OAAAA,OAAA,GAAAtD,EAAA,UAAAW,OAAA4C,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAA,sBAAA,eH2KA,CAAAie,cAAA,GAAAjV,OAAA,EAAAoB,OAAA,IAAA8T,GAAA,CAAA,SAAAzhB,EAAAQ,EAAAJ,IIjLA,SAAAK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAA6Q,EAAA9R,EAAA,wBACAsT,EAAAtT,EAAA,aACA8a,EAAA9a,EAAA,cACA6Q,EAAA7Q,EAAA,eACA6Y,EAAA7Y,EAAA,eACAwW,EAAAxW,EAAA,eACAoU,EAAApU,EAAA,eAEAQ,EAAAJ,QAAAkD,OAAAoe,OAEApe,OAAAoe,OAAA,WACA,SAAAA,EAAAtC,GAAArO,gBAAA5N,KAAAue,GACArX,QAAAC,IAAA,kBACAnH,KAAAwe,WAAAvC,GACAjc,KAAAye,cAJA,OAAAtQ,aAAAoQ,EAAA,CAAA,CAAAnQ,IAAA,aAAA/K,MAAA,SAYA4Y,EAAAvN,GACA1O,KAAAyZ,MAAAwC,EAAArV,OACA5G,KAAAyO,IAAAwN,EAAAvN,GAAAuN,EAAAvN,GAAA,QACA1O,KAAA0e,MAAA,GACA1e,KAAA2e,aAAA,GACA3e,KAAAiW,QAAA,IAAAhF,EAAAgL,KAjBA,CAAA7N,IAAA,cAAA/K,MAAA,WAwBArD,KAAAqT,OAAA,IAAAA,EAAArT,MACAA,KAAA2O,UAAAA,EACA3O,KAAAmQ,KAAA,IAAAA,EAAAnQ,MACAA,KAAA0V,OAAA,IAAAA,EAAA1V,MACAA,KAAA0N,OAAA,IAAAA,EAAA1N,QA5BA,CAAAoO,IAAA,UAAA/K,MAAA,WAmCA,OAAAkL,SAAAC,eAAAxO,KAAAyZ,SAnCA,CAAArL,IAAA,WAAA/K,MAAA,SAyCAqD,GACA1G,KAAA0V,OAAAK,QAAA9I,KAAA,UA1CA,CAAAmB,IAAA,WAAA/K,MAAA,SAgDAqD,GACA1G,KAAA8X,SAAApR,EAAAkL,OACA5R,KAAA4e,WAAAlY,EAAA4H,OACAtO,KAAA6e,SAAAnY,EAAAsK,OACAhR,KAAAmQ,KAAAuK,SACA1a,KAAAmQ,KAAA2O,gBArDA,CAAA1Q,IAAA,WAAA/K,MAAA,SA2DAuO,GACA5R,KAAA2X,MAAA,IAAAA,EAAA/F,EAAA5R,MACAA,KAAAmQ,KAAA2H,aA7DA,CAAA1J,IAAA,aAAA/K,MAAA,SAmEA0b,GACA/e,KAAA0e,MAAAK,EAAA5R,KACAnN,KAAA2e,aAAAI,EAAA1N,KACArR,KAAAmQ,KAAA6O,QAAAD,EAAAzN,MAAAyN,EAAAxN,QACAvR,KAAAmQ,KAAA8O,YAAA9e,OAAA2Q,SAAAC,KAAAnH,MAAA,KAAA,GAAAA,MAAA,KAAA,IAAA,EAAAzJ,OAAA2Q,SAAAC,KAAAnH,MAAA,KAAA,IAAA,KAvEA,CAAAwE,IAAA,WAAA/K,MAAA,SA6EA2N,GAAA,IAAAkO,GAAA,EAAAC,GAAA,EAAAC,OAAAna,EAAA,IACA,IAAA,IAAAoa,EAAAC,EAAAtO,EAAA4B,OAAAC,cAAAqM,GAAAG,EAAAC,EAAAxM,QAAAC,MAAAmM,GAAA,EAAA,CAAA,IAAAra,EAAAwa,EAAAhc,MACArD,KAAAmQ,KAAAgK,QAAAtV,EAAA6J,GAAA,IAAA1O,KAAA2O,UAAA9J,EAAAjE,MAAAiE,EAAA7E,QAFA,MAAAgK,GAAAmV,GAAA,EAAAC,EAAApV,EAAA,QAAA,KAAAkV,GAAAI,EAAArM,QAAAqM,EAAArM,SAAA,QAAA,GAAAkM,EAAA,MAAAC,GAIApf,KAAAmQ,KAAAiK,kBAjFAmE,EAAA,KAoFArhB,KAAA8C,KAAAnD,EAAA,UAAA,oBAAAqD,KAAAA,KAAA,oBAAAC,OAAAA,OAAA,GAAAtD,EAAA,UAAAW,OAAA4C,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAAA,UAAA,GAAA,oBAAA,MH9EAkZ,CAAAA,cAAAA,EAAAA,cAAA,EADAiG,cAAA,EAAAC,cAAA,EAAAC,aAAA,EAAAC,YAAA,GAAAC,uBAAA,GAAAvW,OAAA,EAAAoB,OAAA,KAAA,GAAA,CAAA","file":"magnet.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\nvar lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS ||\n\t\t    code === PLUS_URL_SAFE)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH ||\n\t\t    code === SLASH_URL_SAFE)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n\n}).call(this,require(\"pBGvAp\"),typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/../node_modules/base64-js/lib/b64.js\",\"/../node_modules/base64-js/lib\")","(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = Buffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192\n\n/**\n * If `Buffer._useTypedArrays`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (compatible down to IE6)\n */\nBuffer._useTypedArrays = (function () {\n  // Detect if browser supports Typed Arrays. Supported browsers are IE 10+, Firefox 4+,\n  // Chrome 7+, Safari 5.1+, Opera 11.6+, iOS 4.2+. If the browser does not support adding\n  // properties to `Uint8Array` instances, then that's the same as no `Uint8Array` support\n  // because we need to be able to add all the node Buffer API methods. This is an issue\n  // in Firefox 4-29. Now fixed: https://bugzilla.mozilla.org/show_bug.cgi?id=695438\n  try {\n    var buf = new ArrayBuffer(0)\n    var arr = new Uint8Array(buf)\n    arr.foo = function () { return 42 }\n    return 42 === arr.foo() &&\n        typeof arr.subarray === 'function' // Chrome 9-10 lack `subarray`\n  } catch (e) {\n    return false\n  }\n})()\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (subject, encoding, noZero) {\n  if (!(this instanceof Buffer))\n    return new Buffer(subject, encoding, noZero)\n\n  var type = typeof subject\n\n  // Workaround: node's base64 implementation allows for non-padded strings\n  // while base64-js does not.\n  if (encoding === 'base64' && type === 'string') {\n    subject = stringtrim(subject)\n    while (subject.length % 4 !== 0) {\n      subject = subject + '='\n    }\n  }\n\n  // Find the length\n  var length\n  if (type === 'number')\n    length = coerce(subject)\n  else if (type === 'string')\n    length = Buffer.byteLength(subject, encoding)\n  else if (type === 'object')\n    length = coerce(subject.length) // assume that object is array-like\n  else\n    throw new Error('First argument needs to be a number, array or string.')\n\n  var buf\n  if (Buffer._useTypedArrays) {\n    // Preferred: Return an augmented `Uint8Array` instance for best performance\n    buf = Buffer._augment(new Uint8Array(length))\n  } else {\n    // Fallback: Return THIS instance of Buffer (created by `new`)\n    buf = this\n    buf.length = length\n    buf._isBuffer = true\n  }\n\n  var i\n  if (Buffer._useTypedArrays && typeof subject.byteLength === 'number') {\n    // Speed optimization -- use set if we're copying from a typed array\n    buf._set(subject)\n  } else if (isArrayish(subject)) {\n    // Treat array-ish objects as a byte array\n    for (i = 0; i < length; i++) {\n      if (Buffer.isBuffer(subject))\n        buf[i] = subject.readUInt8(i)\n      else\n        buf[i] = subject[i]\n    }\n  } else if (type === 'string') {\n    buf.write(subject, 0, encoding)\n  } else if (type === 'number' && !Buffer._useTypedArrays && !noZero) {\n    for (i = 0; i < length; i++) {\n      buf[i] = 0\n    }\n  }\n\n  return buf\n}\n\n// STATIC METHODS\n// ==============\n\nBuffer.isEncoding = function (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.isBuffer = function (b) {\n  return !!(b !== null && b !== undefined && b._isBuffer)\n}\n\nBuffer.byteLength = function (str, encoding) {\n  var ret\n  str = str + ''\n  switch (encoding || 'utf8') {\n    case 'hex':\n      ret = str.length / 2\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = utf8ToBytes(str).length\n      break\n    case 'ascii':\n    case 'binary':\n    case 'raw':\n      ret = str.length\n      break\n    case 'base64':\n      ret = base64ToBytes(str).length\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = str.length * 2\n      break\n    default:\n      throw new Error('Unknown encoding')\n  }\n  return ret\n}\n\nBuffer.concat = function (list, totalLength) {\n  assert(isArray(list), 'Usage: Buffer.concat(list, [totalLength])\\n' +\n      'list should be an Array.')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  } else if (list.length === 1) {\n    return list[0]\n  }\n\n  var i\n  if (typeof totalLength !== 'number') {\n    totalLength = 0\n    for (i = 0; i < list.length; i++) {\n      totalLength += list[i].length\n    }\n  }\n\n  var buf = new Buffer(totalLength)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\n// BUFFER INSTANCE METHODS\n// =======================\n\nfunction _hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  assert(strLen % 2 === 0, 'Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var byte = parseInt(string.substr(i * 2, 2), 16)\n    assert(!isNaN(byte), 'Invalid hex string')\n    buf[offset + i] = byte\n  }\n  Buffer._charsWritten = i * 2\n  return i\n}\n\nfunction _utf8Write (buf, string, offset, length) {\n  var charsWritten = Buffer._charsWritten =\n    blitBuffer(utf8ToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction _asciiWrite (buf, string, offset, length) {\n  var charsWritten = Buffer._charsWritten =\n    blitBuffer(asciiToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction _binaryWrite (buf, string, offset, length) {\n  return _asciiWrite(buf, string, offset, length)\n}\n\nfunction _base64Write (buf, string, offset, length) {\n  var charsWritten = Buffer._charsWritten =\n    blitBuffer(base64ToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nfunction _utf16leWrite (buf, string, offset, length) {\n  var charsWritten = Buffer._charsWritten =\n    blitBuffer(utf16leToBytes(string), buf, offset, length)\n  return charsWritten\n}\n\nBuffer.prototype.write = function (string, offset, length, encoding) {\n  // Support both (string, offset, length, encoding)\n  // and the legacy (string, encoding, offset, length)\n  if (isFinite(offset)) {\n    if (!isFinite(length)) {\n      encoding = length\n      length = undefined\n    }\n  } else {  // legacy\n    var swap = encoding\n    encoding = offset\n    offset = length\n    length = swap\n  }\n\n  offset = Number(offset) || 0\n  var remaining = this.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n  encoding = String(encoding || 'utf8').toLowerCase()\n\n  var ret\n  switch (encoding) {\n    case 'hex':\n      ret = _hexWrite(this, string, offset, length)\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = _utf8Write(this, string, offset, length)\n      break\n    case 'ascii':\n      ret = _asciiWrite(this, string, offset, length)\n      break\n    case 'binary':\n      ret = _binaryWrite(this, string, offset, length)\n      break\n    case 'base64':\n      ret = _base64Write(this, string, offset, length)\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = _utf16leWrite(this, string, offset, length)\n      break\n    default:\n      throw new Error('Unknown encoding')\n  }\n  return ret\n}\n\nBuffer.prototype.toString = function (encoding, start, end) {\n  var self = this\n\n  encoding = String(encoding || 'utf8').toLowerCase()\n  start = Number(start) || 0\n  end = (end !== undefined)\n    ? Number(end)\n    : end = self.length\n\n  // Fastpath empty strings\n  if (end === start)\n    return ''\n\n  var ret\n  switch (encoding) {\n    case 'hex':\n      ret = _hexSlice(self, start, end)\n      break\n    case 'utf8':\n    case 'utf-8':\n      ret = _utf8Slice(self, start, end)\n      break\n    case 'ascii':\n      ret = _asciiSlice(self, start, end)\n      break\n    case 'binary':\n      ret = _binarySlice(self, start, end)\n      break\n    case 'base64':\n      ret = _base64Slice(self, start, end)\n      break\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      ret = _utf16leSlice(self, start, end)\n      break\n    default:\n      throw new Error('Unknown encoding')\n  }\n  return ret\n}\n\nBuffer.prototype.toJSON = function () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function (target, target_start, start, end) {\n  var source = this\n\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (!target_start) target_start = 0\n\n  // Copy 0 bytes; we're done\n  if (end === start) return\n  if (target.length === 0 || source.length === 0) return\n\n  // Fatal error conditions\n  assert(end >= start, 'sourceEnd < sourceStart')\n  assert(target_start >= 0 && target_start < target.length,\n      'targetStart out of bounds')\n  assert(start >= 0 && start < source.length, 'sourceStart out of bounds')\n  assert(end >= 0 && end <= source.length, 'sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length)\n    end = this.length\n  if (target.length - target_start < end - start)\n    end = target.length - target_start + start\n\n  var len = end - start\n\n  if (len < 100 || !Buffer._useTypedArrays) {\n    for (var i = 0; i < len; i++)\n      target[i + target_start] = this[i + start]\n  } else {\n    target._set(this.subarray(start, start + len), target_start)\n  }\n}\n\nfunction _base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction _utf8Slice (buf, start, end) {\n  var res = ''\n  var tmp = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    if (buf[i] <= 0x7F) {\n      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])\n      tmp = ''\n    } else {\n      tmp += '%' + buf[i].toString(16)\n    }\n  }\n\n  return res + decodeUtf8Char(tmp)\n}\n\nfunction _asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++)\n    ret += String.fromCharCode(buf[i])\n  return ret\n}\n\nfunction _binarySlice (buf, start, end) {\n  return _asciiSlice(buf, start, end)\n}\n\nfunction _hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction _utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i+1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function (start, end) {\n  var len = this.length\n  start = clamp(start, len, 0)\n  end = clamp(end, len, len)\n\n  if (Buffer._useTypedArrays) {\n    return Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    var newBuf = new Buffer(sliceLen, undefined, true)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n    return newBuf\n  }\n}\n\n// `get` will be removed in Node 0.13+\nBuffer.prototype.get = function (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` will be removed in Node 0.13+\nBuffer.prototype.set = function (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nBuffer.prototype.readUInt8 = function (offset, noAssert) {\n  if (!noAssert) {\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset < this.length, 'Trying to read beyond buffer length')\n  }\n\n  if (offset >= this.length)\n    return\n\n  return this[offset]\n}\n\nfunction _readUInt16 (buf, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 1 < buf.length, 'Trying to read beyond buffer length')\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  var val\n  if (littleEndian) {\n    val = buf[offset]\n    if (offset + 1 < len)\n      val |= buf[offset + 1] << 8\n  } else {\n    val = buf[offset] << 8\n    if (offset + 1 < len)\n      val |= buf[offset + 1]\n  }\n  return val\n}\n\nBuffer.prototype.readUInt16LE = function (offset, noAssert) {\n  return _readUInt16(this, offset, true, noAssert)\n}\n\nBuffer.prototype.readUInt16BE = function (offset, noAssert) {\n  return _readUInt16(this, offset, false, noAssert)\n}\n\nfunction _readUInt32 (buf, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 3 < buf.length, 'Trying to read beyond buffer length')\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  var val\n  if (littleEndian) {\n    if (offset + 2 < len)\n      val = buf[offset + 2] << 16\n    if (offset + 1 < len)\n      val |= buf[offset + 1] << 8\n    val |= buf[offset]\n    if (offset + 3 < len)\n      val = val + (buf[offset + 3] << 24 >>> 0)\n  } else {\n    if (offset + 1 < len)\n      val = buf[offset + 1] << 16\n    if (offset + 2 < len)\n      val |= buf[offset + 2] << 8\n    if (offset + 3 < len)\n      val |= buf[offset + 3]\n    val = val + (buf[offset] << 24 >>> 0)\n  }\n  return val\n}\n\nBuffer.prototype.readUInt32LE = function (offset, noAssert) {\n  return _readUInt32(this, offset, true, noAssert)\n}\n\nBuffer.prototype.readUInt32BE = function (offset, noAssert) {\n  return _readUInt32(this, offset, false, noAssert)\n}\n\nBuffer.prototype.readInt8 = function (offset, noAssert) {\n  if (!noAssert) {\n    assert(offset !== undefined && offset !== null,\n        'missing offset')\n    assert(offset < this.length, 'Trying to read beyond buffer length')\n  }\n\n  if (offset >= this.length)\n    return\n\n  var neg = this[offset] & 0x80\n  if (neg)\n    return (0xff - this[offset] + 1) * -1\n  else\n    return this[offset]\n}\n\nfunction _readInt16 (buf, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 1 < buf.length, 'Trying to read beyond buffer length')\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  var val = _readUInt16(buf, offset, littleEndian, true)\n  var neg = val & 0x8000\n  if (neg)\n    return (0xffff - val + 1) * -1\n  else\n    return val\n}\n\nBuffer.prototype.readInt16LE = function (offset, noAssert) {\n  return _readInt16(this, offset, true, noAssert)\n}\n\nBuffer.prototype.readInt16BE = function (offset, noAssert) {\n  return _readInt16(this, offset, false, noAssert)\n}\n\nfunction _readInt32 (buf, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 3 < buf.length, 'Trying to read beyond buffer length')\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  var val = _readUInt32(buf, offset, littleEndian, true)\n  var neg = val & 0x80000000\n  if (neg)\n    return (0xffffffff - val + 1) * -1\n  else\n    return val\n}\n\nBuffer.prototype.readInt32LE = function (offset, noAssert) {\n  return _readInt32(this, offset, true, noAssert)\n}\n\nBuffer.prototype.readInt32BE = function (offset, noAssert) {\n  return _readInt32(this, offset, false, noAssert)\n}\n\nfunction _readFloat (buf, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset + 3 < buf.length, 'Trying to read beyond buffer length')\n  }\n\n  return ieee754.read(buf, offset, littleEndian, 23, 4)\n}\n\nBuffer.prototype.readFloatLE = function (offset, noAssert) {\n  return _readFloat(this, offset, true, noAssert)\n}\n\nBuffer.prototype.readFloatBE = function (offset, noAssert) {\n  return _readFloat(this, offset, false, noAssert)\n}\n\nfunction _readDouble (buf, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset + 7 < buf.length, 'Trying to read beyond buffer length')\n  }\n\n  return ieee754.read(buf, offset, littleEndian, 52, 8)\n}\n\nBuffer.prototype.readDoubleLE = function (offset, noAssert) {\n  return _readDouble(this, offset, true, noAssert)\n}\n\nBuffer.prototype.readDoubleBE = function (offset, noAssert) {\n  return _readDouble(this, offset, false, noAssert)\n}\n\nBuffer.prototype.writeUInt8 = function (value, offset, noAssert) {\n  if (!noAssert) {\n    assert(value !== undefined && value !== null, 'missing value')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset < this.length, 'trying to write beyond buffer length')\n    verifuint(value, 0xff)\n  }\n\n  if (offset >= this.length) return\n\n  this[offset] = value\n}\n\nfunction _writeUInt16 (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(value !== undefined && value !== null, 'missing value')\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 1 < buf.length, 'trying to write beyond buffer length')\n    verifuint(value, 0xffff)\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  for (var i = 0, j = Math.min(len - offset, 2); i < j; i++) {\n    buf[offset + i] =\n        (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n            (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function (value, offset, noAssert) {\n  _writeUInt16(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeUInt16BE = function (value, offset, noAssert) {\n  _writeUInt16(this, value, offset, false, noAssert)\n}\n\nfunction _writeUInt32 (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(value !== undefined && value !== null, 'missing value')\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 3 < buf.length, 'trying to write beyond buffer length')\n    verifuint(value, 0xffffffff)\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  for (var i = 0, j = Math.min(len - offset, 4); i < j; i++) {\n    buf[offset + i] =\n        (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function (value, offset, noAssert) {\n  _writeUInt32(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeUInt32BE = function (value, offset, noAssert) {\n  _writeUInt32(this, value, offset, false, noAssert)\n}\n\nBuffer.prototype.writeInt8 = function (value, offset, noAssert) {\n  if (!noAssert) {\n    assert(value !== undefined && value !== null, 'missing value')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset < this.length, 'Trying to write beyond buffer length')\n    verifsint(value, 0x7f, -0x80)\n  }\n\n  if (offset >= this.length)\n    return\n\n  if (value >= 0)\n    this.writeUInt8(value, offset, noAssert)\n  else\n    this.writeUInt8(0xff + value + 1, offset, noAssert)\n}\n\nfunction _writeInt16 (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(value !== undefined && value !== null, 'missing value')\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 1 < buf.length, 'Trying to write beyond buffer length')\n    verifsint(value, 0x7fff, -0x8000)\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  if (value >= 0)\n    _writeUInt16(buf, value, offset, littleEndian, noAssert)\n  else\n    _writeUInt16(buf, 0xffff + value + 1, offset, littleEndian, noAssert)\n}\n\nBuffer.prototype.writeInt16LE = function (value, offset, noAssert) {\n  _writeInt16(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeInt16BE = function (value, offset, noAssert) {\n  _writeInt16(this, value, offset, false, noAssert)\n}\n\nfunction _writeInt32 (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(value !== undefined && value !== null, 'missing value')\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 3 < buf.length, 'Trying to write beyond buffer length')\n    verifsint(value, 0x7fffffff, -0x80000000)\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  if (value >= 0)\n    _writeUInt32(buf, value, offset, littleEndian, noAssert)\n  else\n    _writeUInt32(buf, 0xffffffff + value + 1, offset, littleEndian, noAssert)\n}\n\nBuffer.prototype.writeInt32LE = function (value, offset, noAssert) {\n  _writeInt32(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeInt32BE = function (value, offset, noAssert) {\n  _writeInt32(this, value, offset, false, noAssert)\n}\n\nfunction _writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(value !== undefined && value !== null, 'missing value')\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 3 < buf.length, 'Trying to write beyond buffer length')\n    verifIEEE754(value, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n}\n\nBuffer.prototype.writeFloatLE = function (value, offset, noAssert) {\n  _writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function (value, offset, noAssert) {\n  _writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction _writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    assert(value !== undefined && value !== null, 'missing value')\n    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')\n    assert(offset !== undefined && offset !== null, 'missing offset')\n    assert(offset + 7 < buf.length,\n        'Trying to write beyond buffer length')\n    verifIEEE754(value, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n\n  var len = buf.length\n  if (offset >= len)\n    return\n\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n}\n\nBuffer.prototype.writeDoubleLE = function (value, offset, noAssert) {\n  _writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function (value, offset, noAssert) {\n  _writeDouble(this, value, offset, false, noAssert)\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (typeof value === 'string') {\n    value = value.charCodeAt(0)\n  }\n\n  assert(typeof value === 'number' && !isNaN(value), 'value is not a number')\n  assert(end >= start, 'end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  assert(start >= 0 && start < this.length, 'start out of bounds')\n  assert(end >= 0 && end <= this.length, 'end out of bounds')\n\n  for (var i = start; i < end; i++) {\n    this[i] = value\n  }\n}\n\nBuffer.prototype.inspect = function () {\n  var out = []\n  var len = this.length\n  for (var i = 0; i < len; i++) {\n    out[i] = toHex(this[i])\n    if (i === exports.INSPECT_MAX_BYTES) {\n      out[i + 1] = '...'\n      break\n    }\n  }\n  return '<Buffer ' + out.join(' ') + '>'\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer._useTypedArrays) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1)\n        buf[i] = this[i]\n      return buf.buffer\n    }\n  } else {\n    throw new Error('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function (arr) {\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array get/set methods before overwriting\n  arr._get = arr.get\n  arr._set = arr.set\n\n  // deprecated, will be removed in node 0.13+\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\n// slice(start, end)\nfunction clamp (index, len, defaultValue) {\n  if (typeof index !== 'number') return defaultValue\n  index = ~~index;  // Coerce to integer.\n  if (index >= len) return len\n  if (index >= 0) return index\n  index += len\n  if (index >= 0) return index\n  return 0\n}\n\nfunction coerce (length) {\n  // Coerce length to a number (possibly NaN), round up\n  // in case it's fractional (e.g. 123.456) then do a\n  // double negate to coerce a NaN to 0. Easy, right?\n  length = ~~Math.ceil(+length)\n  return length < 0 ? 0 : length\n}\n\nfunction isArray (subject) {\n  return (Array.isArray || function (subject) {\n    return Object.prototype.toString.call(subject) === '[object Array]'\n  })(subject)\n}\n\nfunction isArrayish (subject) {\n  return isArray(subject) || Buffer.isBuffer(subject) ||\n      subject && typeof subject === 'object' &&\n      typeof subject.length === 'number'\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    var b = str.charCodeAt(i)\n    if (b <= 0x7F)\n      byteArray.push(str.charCodeAt(i))\n    else {\n      var start = i\n      if (b >= 0xD800 && b <= 0xDFFF) i++\n      var h = encodeURIComponent(str.slice(start, i+1)).substr(1).split('%')\n      for (var j = 0; j < h.length; j++)\n        byteArray.push(parseInt(h[j], 16))\n    }\n  }\n  return byteArray\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(str)\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  var pos\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length))\n      break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction decodeUtf8Char (str) {\n  try {\n    return decodeURIComponent(str)\n  } catch (err) {\n    return String.fromCharCode(0xFFFD) // UTF 8 invalid char\n  }\n}\n\n/*\n * We have to make sure that the value is a valid integer. This means that it\n * is non-negative. It has no fractional component and that it does not\n * exceed the maximum allowed value.\n */\nfunction verifuint (value, max) {\n  assert(typeof value === 'number', 'cannot write a non-number as a number')\n  assert(value >= 0, 'specified a negative value for writing an unsigned value')\n  assert(value <= max, 'value is larger than maximum value for type')\n  assert(Math.floor(value) === value, 'value has a fractional component')\n}\n\nfunction verifsint (value, max, min) {\n  assert(typeof value === 'number', 'cannot write a non-number as a number')\n  assert(value <= max, 'value larger than maximum allowed value')\n  assert(value >= min, 'value smaller than minimum allowed value')\n  assert(Math.floor(value) === value, 'value has a fractional component')\n}\n\nfunction verifIEEE754 (value, max, min) {\n  assert(typeof value === 'number', 'cannot write a non-number as a number')\n  assert(value <= max, 'value larger than maximum allowed value')\n  assert(value >= min, 'value smaller than minimum allowed value')\n}\n\nfunction assert (test, message) {\n  if (!test) throw new Error(message || 'Failed assertion')\n}\n\n}).call(this,require(\"pBGvAp\"),typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/../node_modules/buffer/index.js\",\"/../node_modules/buffer\")","(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n}).call(this,require(\"pBGvAp\"),typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/../node_modules/ieee754/index.js\",\"/../node_modules/ieee754\")","(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\n// shim for using process in browser\n\nvar process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var canSetImmediate = typeof window !== 'undefined'\n    && window.setImmediate;\n    var canPost = typeof window !== 'undefined'\n    && window.postMessage && window.addEventListener\n    ;\n\n    if (canSetImmediate) {\n        return function (f) { return window.setImmediate(f) };\n    }\n\n    if (canPost) {\n        var queue = [];\n        window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n\n        return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n        };\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n}\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\n\n}).call(this,require(\"pBGvAp\"),typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/../node_modules/process/browser.js\",\"/../node_modules/process\")","(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\nmodule.exports = class Events{\n  constructor(parent){\n    this._parent = parent;\n    this._startX = 0;\n    this._startY = 0;\n    this._focus = false;\n    this._component = false;\n    this.initEvents();\n  }\n\n  initEvents(){\n    const board = document.getElementById(`${this._parent._id}_board`);\n    const me = this;\n    board.addEventListener(\"mousedown\", (e) => {\n      const id = e.target.id;\n      const component = (e.target.getAttribute('type') == 'component');\n      me.startDrag({\n        id,\n        component,\n        x: e.x,\n        y: e.y\n      });\n    });\n    board.addEventListener(\"mouseup\", (e) => {\n      this.stopDrag({\n        x: e.x,\n        y: e.y\n      });\n    });\n    board.addEventListener(\"mousemove\", (e) => {\n      if(this._focus) this.moveItem({\n        x: e.x,\n        y: e.y\n      })\n    });\n    board.addEventListener(\"mouseleave\", (e) => {\n      if(this._focus) this.mouseLeave()\n    });\n    board.addEventListener(\"touchstart\", (e) => {\n      const id = e.changedTouches[0].target.id;\n      const component = (e.changedTouches[0].target.getAttribute('type') == 'component');\n      me.startDrag({\n        id,\n        component,\n        x: e.changedTouches[0].clientX,\n        y: e.changedTouches[0].clientY\n      });\n    });\n    board.addEventListener(\"touchmove\", (e) => {\n      if(this._focus) this.moveItem({\n      x: e.changedTouches[0].clientX,\n      y: e.changedTouches[0].clientY\n    })\n  });\n    board.addEventListener(\"touchend\", (e) => {\n        this.stopDrag({\n      x: e.changedTouches[0].clientX,\n      y: e.changedTouches[0].clientY\n      });\n    board.addEventListener(\"touchcancel\", (e) => {\n      if(this._focus) this.mouseLeave()\n  });\n  });\n  }\n\n  startDrag(conf){\n    const item = document.getElementById(conf.id);\n    this._offsetX = conf.x;\n    this._offsetY = conf.y;\n    this._startX = parseInt(item.style.left.split('px')[0]);\n    this._startY = parseInt(item.style.top.split('px')[0]);\n    this._focus = conf.id;\n    this._component = conf.component;\n  }\n\n  moveItem(conf){\n    const board = document.getElementById(`${this._parent._id}_board`);\n    const left = parseInt(window.getComputedStyle(board,null).getPropertyValue(\"left\").split('px')[0]);\n    const right = parseInt(window.getComputedStyle(board,null).getPropertyValue(\"right\").split('px')[0]);\n    const top = parseInt(window.getComputedStyle(board,null).getPropertyValue(\"top\").split('px')[0]);\n    const bottom = parseInt(window.getComputedStyle(board,null).getPropertyValue(\"bottom\").split('px')[0]);\n    const xDir = this._lastX - conf.x;\n    const yDir = this._lastY - conf.y;\n\n    if(((left < (this._parent.View._width / 2) || xDir > 0 ) && (right < ((this._parent.View._width / 2))) || xDir < 0 ) || this._component) document.getElementById(this._focus).style.left = this._startX + (conf.x - this._offsetX);\n    if(((top < (this._parent.View._width / 2) || yDir > 0 ) && (bottom < ((this._parent.View._width / 2))) || yDir < 0 ) || this._component) document.getElementById(this._focus).style.top = this._startY + (conf.y - this._offsetY);\n\n\n    if(!this._component) {\n      if (parseInt(window.getComputedStyle(board, null).getPropertyValue(\"left\").split('px')[0]) > (this._parent.View._width / 2)) {\n        document.getElementById(this._focus).style.left = (this._parent.View._width / 2)\n      }\n\n      if (parseInt(window.getComputedStyle(board, null).getPropertyValue(\"top\").split('px')[0]) > (this._parent.View._height / 2)) {\n        document.getElementById(this._focus).style.top = (this._parent.View._height / 2)\n      }\n\n      if ((parseInt(window.getComputedStyle(board, null).getPropertyValue(\"right\").split('px')[0]) > (this._parent.View._width / 2))) {\n        document.getElementById(this._focus).style.left = -((this._parent.View._width / 2)) + this._parent.View._wrapperX\n      }\n\n      if ((parseInt(window.getComputedStyle(board, null).getPropertyValue(\"bottom\").split('px')[0]) > (this._parent.View._height / 2))) {\n        document.getElementById(this._focus).style.top = -((this._parent.View._height / 2)) + this._parent.View._wrapperY\n      }\n    }\n\n    this._lastX = conf.x;\n    this._lastY = conf.y;\n  }\n\n  stopDrag(conf){\n    const x = this._startX + (conf.x - this._offsetX);\n    const y = this._startY + (conf.y - this._offsetY);\n    const newXY = this._parent.View.convertXY(x, y, 'component');\n    if(this._component) this._parent.View.getItem(this._focus).setLocalPosition(newXY.x, newXY.y);\n    else{\n      const left = document.getElementById(this._focus).style.left.split('px')[0];\n      const top = document.getElementById(this._focus).style.top.split('px')[0];\n      const boardXY = this._parent.View.getPosition();\n      window.location.hash = boardXY.x+','+boardXY.y;\n    }\n    this._focus = false;\n  }\n\n  mouseLeave(){\n    document.getElementById(this._focus).style.left = this._startX;\n    document.getElementById(this._focus).style.top = this._startY;\n    this._focus = false;\n    // $('#'+this._focus).animate({\n    //   left: this._startX,\n    //   top: this._startY\n    // }, 200);\n  }\n}\n\n}).call(this,require(\"pBGvAp\"),typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/Events.js\",\"/\")","(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\nmodule.exports = class Generator {\n  constructor(props){\n    this._board = this.generateBoard({\n      id: props.id || false,\n      name: props.name || false,\n      desc: props.desc || false,\n      width: props.width || false,\n      height: props.height || false\n    });\n    this._items = this.generateItems(props.items);\n    this._theme = this.generateTheme(props.theme);\n\n    return {\n      board: this._board,\n      items: this._items,\n      theme: this._theme,\n      exists: true // Required to align with the sockets feature (handles a scenario where the board doesn't yet exist)\n    }\n  }\n\n\n  generateBoard(board){\n    return Object.assign(\n      board,\n    {\n      name: board.name ? board.name : \"Empty\",\n      desc: board.desc ? board.desc : \"No Description\",\n      width: board.width ? board.width : 2000,\n      height: board.height ? board.height : 2000\n    })\n  }\n\n  generateItems(items) {\n\n    if (typeof items == 'array') {\n      return items;\n    }\n\n    return [...Array(items.spawn || 100)].map((item, index) => {\n\n      const location = this.generateLocation();\n\n      const extraValues = {};\n\n      for (const key of Object.keys(items.options)) {\n        if (Array.isArray(items.options[key])){\n          extraValues[key] = this.pickRandomFromArray(items.options[key]);\n        }\n        else {\n          extraValues[key] = items.options[key];\n        }\n      }\n\n    return Object.assign(\n      {\n        id: index\n      },\n      location,\n      extraValues);\n\n  })\n\n  }\n\n  generateTheme(theme){\n    return theme;\n  }\n\n  pickRandomFromArray(array){\n    return array[Math.floor(Math.random() * array.length)];\n  }\n\n  generateLocation(){\n    return {\n      x: (Math.floor(Math.random() * (this._board.width + 1))) - (this._board.width / 2),\n      y: (Math.floor(Math.random() * (this._board.height + 1))) - (this._board.height / 2)\n    }\n  }\n\n}\n}).call(this,require(\"pBGvAp\"),typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/Generator.js\",\"/\")","(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\nmodule.exports = class Mixins{\n  constructor(){\n  }\n\n  /**\n   * Apply styles to dom object\n   */\n  applyStyle(dom, style, params){\n    const arrayStyle = (typeof style.length != 'undefined') ? style : Object.entries(style);\n    for(style of arrayStyle){\n      dom.style[style[0]] = this.applyTemplate(style[1], params);\n    }\n    return dom;\n  }\n\n  /**\n   * Apply template information\n   */\n  applyTemplate(value, params){\n    if(value.indexOf('[') != -1) value = value.replace(/\\[r\\]/g, params.r).replace(/\\[g\\]/g, params.g).replace(/\\[b\\]/g, params.b);\n    if(value.indexOf('{') !=- 1) {\n      const regex = value.match(/\\{([^}]+)\\}/g);\n      for (const match of regex) {\n        value = value.replace(match, eval(match));\n      }\n    }\n    return value;\n  }\n\n  /**\n   * Convert css object to string\n   */\n  convertToCSSString(cssObject){\n    const entries = Object.entries(cssObject);\n    const cssArray = [];\n    for(const entry of entries){\n      for(let i = 0; i < entry[0].length; i++){\n        if(entry[0].charAt(i) === entry[0].charAt(i).toUpperCase()){\n          entry[0] = entry[0].slice(0,i)+'-'+entry[0].slice(i, entry[0].length).toLowerCase();\n        }\n      }\n      cssArray.push(entry[0]+': '+entry[1]);\n    }\n    return cssArray.join('; ');\n  }\n\n  makeAnimation(item, value, to, duration){\n    const start = item.style[value].split('px')[0];\n    const change = to - start;\n    const increment = 10;\n    let currentTime = 0;\n    const easeInOutQuad = function(t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    var animateScroll = function(){\n      currentTime += increment;\n      var val = easeInOutQuad(currentTime, start, change, duration);\n      // console.log(value, (parseFloat(start) + parseFloat(val)), val, duration, currentTime);\n      item.style[value] = currentTime == duration ? to : (parseFloat(start) + parseFloat(val));\n      if(currentTime < duration) {\n        setTimeout(animateScroll, increment);\n      }\n    };\n    animateScroll();\n\n  }\n}\n}).call(this,require(\"pBGvAp\"),typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/Mixins.js\",\"/\")","(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\nconst Generator = require('./Generator');\n\nmodule.exports = class Socket{\n  constructor(parent){\n    this._parent = parent;\n    this.initSocket();\n  }\n\n  /**\n   * Init socket events\n   */\n  initSocket(){\n    const me = this;\n    this._socketConnected = false;\n    if(typeof io == 'undefined'){\n      console.log('Socket.io not enabled, generating static board');\n      this._socketEnabled = false;\n      this._socket = {\n        emit: () => {\n          return false;\n        }\n      }\n      const generatedBoard = this._parent._config;\n      me.onLoad(generatedBoard);\n    }\n    else{\n      this._socketEnabled = true;\n      this._socket = io.connect('ws://www.online-fridge.com');\n      this._socket.on('connect', () => {\n        me.onSocketConnected();\n      });\n        this._socket.on('disconnect', () => {\n          me.onSocketDisconnected();\n      });\n        this._socket.on('error', (err) => {\n          me.onSocketError(err);\n      });\n        this._socket.on('authenticate', (data) => {\n          me.onAuthenticate(data);\n      })\n        this._socket.on('load', (data) => {\n          me.onLoad(data);\n      })\n        this._socket.on('move', (data) => {\n          me.onMove(data);\n      })\n        this._socket.on('add', (data) => {\n          me.onAdd(data);\n      })\n        this._socket.on('noExist', (data) => {\n          me._parent.View.askCreate();\n      })\n        this._socket.on('stats', (data) => {\n          me._parent.View.updateStats(data);\n      })\n    }\n  }\n\n  /**\n   * On Authenticate\n   */\n  onAuthenticate(data){\n    this._parent.getBoard(data);\n  }\n\n  /**\n   * On Load\n   */\n  onLoad(data){\n    this._parent.setBoard(data)\n  }\n\n  /**\n   * On Move\n   */\n  onMove(data){\n    for(const move of data){\n      if(move.time) this._parent.View.getItem(move.id).setRemotePosition(move.x, move.y, move.time)\n      else this._parent.View.getItem(move.id).setRemotePosition(move.x, move.y)\n    }\n  }\n\n  /**\n   * On Item Add\n   */\n  onAdd(data){\n    this._parent.View.addItem(data);\n  }\n\n  /**\n   * On Socket Connect\n   */\n  onSocketConnected(){\n    this._socketConnected = true;\n    console.log(`${this._parent._id.split('#')[0]}: Connected to socket`);\n    this.authenticate();\n  }\n\n  /**\n   * Authenticate Board\n   */\n  authenticate(){\n    console.log('authenticating');\n    this._socket.emit('authenticate', {id: this._parent._id});\n  }\n\n  /**\n   * On Socket Disconnected\n   */\n  onSocketDisconnected(){\n    this._socketConnected = false;\n    console.log(`${this._parent._id}: Socket disconnected`);\n  }\n\n  /**\n   * On Socket Error\n   */\n  onSocketError(err){\n    this._socketConnected = false;\n    console.log(error);\n  }\n}\n\n}).call(this,require(\"pBGvAp\"),typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/Socket.js\",\"/\")","(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\nmodule.exports = class Theme{\n\n  /**\n   * Initiate theme with config\n   * @param theme\n   */\n  constructor(theme, parent){\n    this._parent = parent;\n    this._items = new Map();\n    this._colors = new Map();\n    this.setTheme(theme);\n  }\n\n  /**\n   *  Set theme state\n   */\n  setTheme(theme){\n    for(const item of theme){\n      switch(item.key){\n        case 'rgb':{\n          this._colors.set((item.code == 'color') ? item.id : item.code, {\n            r: item.value.split(',')[0],\n            g: item.value.split(',')[1],\n            b: item.value.split(',')[2]\n          })\n          break;\n        }\n        default:{\n          if(!this._items.has(item.code)) {\n            this._items.set(item.code, theme.filter(other => (other.code == item.code)).map( item => ([item.key, item.value])));\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Apply theme to dom object\n   */\n  applyTheme(dom, code, params){\n    //debugger;\n    if(this._items.has(code)){\n      // debugger;\n      return this._parent.Mixins.applyStyle(dom, this.getItem(code), params);\n    }\n    return dom;\n  }\n\n  /**\n   * Apply background to dom object\n   */\n  applyBackground(dom){\n    dom.style.background = this.getColorCSS('background');\n    return dom;\n  }\n\n  /**\n   *  Get theme item array\n   */\n  getItem(code){\n    //console.log('getting: ', this._items.get(code));\n    return this._items.get(code);\n  }\n\n  /**\n   * Get color rgb values as object\n   */\n  getColor(key){\n    return this._colors.get(key)\n  }\n\n  /**\n   * Get color as rgb string (CSS)\n   */\n  getColorCSS(key){\n    const color =  this._colors.get(key);\n    return `rgb(${color.r},${color.g},${color.b})`;\n  }\n}\n\n}).call(this,require(\"pBGvAp\"),typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/Theme.js\",\"/\")","(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\nmodule.exports = class View{\n  constructor(me){\n    this._parent = me;\n    this._items = new Map();\n    this._classNames = new Set();\n    this.initCSS();\n    this.buildDOM();\n    this.setWrapperSize();\n    this.setEvents();\n  }\n\n  /**\n   * Initialise CSS Objects\n   */\n  initCSS(){\n    this._wrapperCSS = {\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n      position: 'relative'\n    }\n\n    this._boardCSS = {\n      width: '100%',\n      height: '100%',\n      position: 'absolute',\n      background: 'white'\n    }\n  }\n\n  /**\n   * Build DOM\n   */\n  buildDOM(){\n    const root = document.getElementById(this._parent._root);\n    const wrapper = document.createElement(\"div\");\n    wrapper.id = `${this._parent._id}_wrapper`;\n    wrapper.className = \"wrapper\";\n    this._parent.Mixins.applyStyle(wrapper, this._wrapperCSS);\n    const board = document.createElement(\"div\");\n    board.id = `${this._parent._id}_board`;\n    this._parent.Mixins.applyStyle(board, this._boardCSS);\n    const stats = document.createElement('div');\n    stats.id = 'members';\n    stats.className = 'statsToggle';\n    const spinner = document.createElement('div');\n    const dot1 = document.createElement('div');\n    const dot2 = document.createElement('div');\n    spinner.className = 'spinner';\n    spinner.id = 'spinner';\n    dot1.className = 'dot1';\n    dot2.className = 'dot2';\n    spinner.appendChild(dot1);\n    spinner.appendChild(dot2);\n    wrapper.appendChild(board);\n    console.log('removed');\n    root.innerHTML = '';\n    debugger;\n    console.log('adding');\n    root.appendChild(wrapper);\n    root.appendChild(stats);\n    root.appendChild(spinner);\n  }\n\n  /**\n   * Add Item\n   */\n  addItem(item){\n    console.log('adding item');\n    this.setItem(item.id, new this._parent.component[item.type](item, this._parent));\n    this.renderItems();\n  }\n\n  /**\n   * Ask To Create Board (If Board doesn't exist)\n   */\n  askCreate(){\n    const me = this;\n    const message = document.createElement(\"div\");\n    message.className = \"message\";\n    message.innerHTML = `\n    Fridge \"${this._parent._id}\" is available!<br>\n    `\n    const button = document.createElement(\"button\");\n    button.innerHTML = 'Create';\n    message.id = 'message';\n    button.addEventListener('click', () => {\n      console.log('clicked', document.getElementsByClassName('message'));\n      document.getElementsByClassName('message').outerHTML = '';\n      document.getElementById(`${this._parent._id}_board`).removeChild(document.getElementById('message'));\n      me._parent.Socket._socket.emit('start', {id: me._parent._id});\n    });\n\n    message.appendChild(button);\n\n    document.getElementById(`${this._parent._id}_board`).appendChild(message);\n    this.fadeIn();\n  }\n\n  /**\n   * Set View Events (Resize window etc)\n   */\n  setEvents(){\n    const me = this;\n    window.onresize = function(event) {\n      me.setWrapperSize();\n      me.loadPosition();\n    };\n  }\n\n  /**\n   * Set Board size\n   */\n  setSize(width, height){\n    this._width = width;\n    this._height = height;\n    const board = document.getElementById(`${this._parent._id}_board`);\n    board.style.width = this._width+'px';\n    board.style.height = this._height+'px';\n    board.style.margin = `-${this._height / 2}px -${this._width / 2}px`;\n  }\n\n  /**\n   * Set board Position\n   */\n  setPosition(x, y){\n    this._x = x;\n    this._y = y;\n    this.loadPosition();\n  }\n\n  /**\n   * Get board position\n   */\n  getPosition(){\n    const board = document.getElementById(`${this._parent._id}_board`);\n    return {\n      x: Math.floor((parseInt(board.style.left.split('px')[0]) - (this._wrapperX / 2))),\n      y: Math.floor(parseInt(board.style.top.split('px')[0]) - (this._wrapperY / 2))\n    }\n  }\n\n  setWrapperSize(){\n    const wrapper = document.getElementById(`${this._parent._id}_wrapper`);\n    this._wrapperX = document.getElementById(this._parent._root).offsetWidth;\n    this._wrapperY = document.getElementById(this._parent._root).offsetHeight;\n  }\n\n  loadPosition(){\n    const board = document.getElementById(`${this._parent._id}_board`);\n    board.style.top = `${parseInt((this._wrapperY / 2)) + parseInt(this._y)}px`;\n    board.style.left = `${parseInt((this._wrapperX / 2)) + parseInt(this._x)}px`;\n  }\n\n  setTheme(){\n    this._parent.Theme.applyBackground(document.getElementById(`${this._parent._id}_board`));\n  }\n\n  setItem(id, object){\n    this._items.set(id, object)\n  }\n\n  getItem(id){\n    return this._items.get(parseInt(id));\n  }\n\n  convertXY(x, y, target){\n    if(target == 'board') {\n      const board = document.getElementById(`${this._parent._id}_board`);\n      return {\n        x: x + (parseInt(board.style.width.split('px')[0]) / 2),\n        y: y + (parseInt(board.style.height.split('px')[0]) / 2),\n      }\n    }\n    else{\n      const board = document.getElementById(`${this._parent._id}_board`);\n      return {\n        x: x - (parseInt(board.style.width.split('px')[0]) / 2),\n        y: y - (parseInt(board.style.height.split('px')[0]) / 2),\n      }\n    }\n  }\n\n  updateStats(stats){\n    document.getElementById('members').innerHTML = stats.members+' Online';\n  }\n\n  hideLoad(){\n    document.getElementById('spinner').style.display = 'none';\n  }\n\n  /**\n   * Fade the board into view\n   */\n  fadeIn(){\n    document.getElementsByClassName('wrapper')[0].style.opacity = 1;\n  }\n\n  fadeInStats(){\n    document.getElementsByClassName('statsToggle')[0].style.opacity = 1;\n  }\n\n  renderItems(){\n    this.hideLoad();\n    for(const item of [...this._items.values()]){\n      if(!document.getElementById(item.getItem().id)) {\n        const board = document.getElementById(`${this._parent._id}_board`);\n        const itemDiv = item.getItem();\n        board.appendChild(itemDiv);\n      }\n    }\n  }\n\n  /**\n   * Create a css class from an object\n   */\n  addCSSClass(className, classDetails){\n    const style = document.createElement('style');\n    style.type = 'text/css';\n    style.innerHTML = `.${className} { ${this._parent.Mixins.convertToCSSString(classDetails)} }`;\n    document.getElementsByTagName('head')[0].appendChild(style);\n    this._classNames.add(className);\n  }\n\n  /**\n   * Has the class been dynamicaly loaded?\n   */\n  hasClass(className){\n    return this._classNames.has(className);\n  }\n}\n}).call(this,require(\"pBGvAp\"),typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/View.js\",\"/\")","(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\nconst Mixins = require('../Mixins');\n\nmodule.exports = class Component {\n  constructor(config, parent){\n    this._parent = parent;\n    this._id = config.id;\n    this._x = config.x;\n    this._y = config.y;\n    this._type = 'component';\n  }\n\n  /**\n   * Initialise default values (css class defaults)\n   */\n  init(){\n    this._defaultClass = {\n      position: 'absolute',\n      transform: 'translate(-50%, -50%)',\n      cursor: 'pointer',\n      padding: '0px',\n      userSelect: 'none'\n    }\n  }\n\n  /**\n   * Return item as dom object\n   */\n  getItem(){\n    const r = this._parent.Theme.getColor(this._color).r;\n    const g = this._parent.Theme.getColor(this._color).g;\n    const b = this._parent.Theme.getColor(this._color).b;\n    const itemDiv = document.createElement(\"div\");\n    const xy = this._parent.View.convertXY(this._x, this._y, 'board');\n    itemDiv.id = this._id;\n    itemDiv.className = this._type;\n    itemDiv.innerHTML = this._text;\n    itemDiv.style.top = xy.y;\n    itemDiv.style.left = xy.x;\n    itemDiv.setAttribute('type', 'component');\n    this._parent.Mixins.applyStyle(itemDiv, this._defaultTheme, {r,g,b});\n    this._parent.Theme.applyTheme(itemDiv, 'letter', {r,g,b});\n    return itemDiv;\n  }\n\n  /**\n   * Set the position of the item as and emit to socket (as if it was set by the current user)\n   */\n  setLocalPosition(x, y){\n    this._x = x;\n    this._y = y;\n    console.log(`${this._type} ${this._id}: x(${Math.floor(x)}) y(${Math.floor(y)})`);\n    this._parent.Socket._socket.emit('move', {\n      id: this._id,\n      x: this._x,\n      y: this._y\n    })\n  }\n\n  /**\n   * Set the position of the item and create pulse animation (as if it was set by a different user)\n   */\n  setRemotePosition(x, y, time){\n    this._x = x;\n    this._y = y;\n    this.animateSetPosition(time);\n    if(typeof this.moveAnimation === 'function') this.moveAnimation();\n  }\n\n  /**\n   * Animate the movement of the item\n   */\n  animateSetPosition(time){\n    const xy = this._parent.View.convertXY(this._x, this._y, 'board');\n    const item = document.getElementById(this._id);\n\n    this._parent.Mixins.makeAnimation(item, 'left', xy.x, time || 200);\n    this._parent.Mixins.makeAnimation(item, 'top', xy.y, time || 200);\n\n    // $('#'+this._id).animate({\n    //   left: xy.x,\n    //   top: xy.y\n    // }, time || 200);\n  }\n}\n}).call(this,require(\"pBGvAp\"),typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/component/Component.js\",\"/component\")","(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\nconst Component = require('./Component.js')\n\nmodule.exports = class Letter extends Component{\n  constructor(config, parent){\n    super(config, parent);\n    this._text = config.text;\n    this._color = config.color;\n    this._type = 'letter';\n    if(!this._parent.View.hasClass(this._type)) this.init();\n    this.initCustom();\n  }\n\n  init(){\n    /**\n     * Add parent default class information\n     */\n    super.init();\n    /**\n     * Insert custom default class information\n     */\n    this._defaultClass = Object.assign({\n      fontStyle: 'normal',\n      fontSize: '40px',\n      lineHeight: '40px',\n      color: 'rgb([r],[g],[b])',\n      height: '40px',\n      outline: '1px solid transparent'\n    },this._defaultClass);\n    /**\n     * Dynamically insert class\n     */\n    this._parent.View.addCSSClass(this._type, this._defaultClass);\n  }\n\n  initCustom(){\n    this._defaultTheme = {\n      color: 'rgb([r],[g],[b])'\n    };\n  }\n\n  moveAnimation(){\n    const pulse = document.createElement('div');\n    const me = this;\n    pulse.id = 'pulse_'+this._id;\n    pulse.className = 'pulse';\n    pulse.style.borderColor = `rgb(${this._parent.Theme.getColor(this._color)})`;\n    document.getElementById(this._id).appendChild(pulse);\n    setTimeout(() => { document.getElementById(me._id).removeChild(pulse); },10000);\n  }\n\n}\n}).call(this,require(\"pBGvAp\"),typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/component/Letter.js\",\"/component\")","(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\nconst Letter = require('./Letter.js')\n\nmodule.exports = {\n  Letter\n}\n}).call(this,require(\"pBGvAp\"),typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/component/index.js\",\"/component\")","(function (process,global,Buffer,__argument0,__argument1,__argument2,__argument3,__filename,__dirname){\nconst component = require('./component/index.js')\nconst View = require('./View.js')\nconst Theme = require('./Theme.js')\nconst Events = require('./Events.js')\nconst Socket = require('./Socket.js')\nconst Mixins = require('./Mixins.js')\nconst Generator = require('./Generator')\n\nmodule.exports = window.Magnet;\n\nwindow.Magnet = class Magnet {\n  constructor(config){\n    console.log('Magnet started')\n    this.initConfig(config);\n    this.initClasses();\n  }\n\n  /**\n   * Initialise Config\n   * @param target\n   * @param id\n   */\n  initConfig(config, id){\n    this._root = config.target;\n    this._id = config.id ? config.id : 'local';\n    this._name = '';\n    this._description = '';\n    this._config = new Generator(config)\n  }\n\n  /**\n   * Initialise Classes\n   */\n  initClasses(){\n    this.Mixins = new Mixins(this);\n    this.component = component;\n    this.View = new View(this);\n    this.Socket = new Socket(this);\n    this.Events = new Events(this);\n  }\n\n  /**\n   * Return root dom\n   */\n  getRoot(){\n    return document.getElementById(this._root);\n  }\n\n  /**\n   * Get Board data\n   */\n  getBoard(data){\n    this.Socket._socket.emit('load');\n  }\n\n  /**\n   * Set Board from Data\n   */\n  setBoard(data){\n    this.setTheme(data.theme);\n    this.setDetails(data.board);\n    this.setItems(data.items);\n    this.View.fadeIn();\n    this.View.fadeInStats();\n  }\n\n  /**\n   * Set board theme\n   */\n  setTheme(theme){\n    this.Theme = new Theme(theme, this);\n    this.View.setTheme();\n  }\n\n  /**\n   * Set board details\n   */\n  setDetails(details){\n    this._name = details.name;\n    this._description = details.desc;\n    this.View.setSize(details.width, details.height);\n    this.View.setPosition(window.location.hash.split(',')[0].split('#')[1] || 0,window.location.hash.split(',')[1] || 0);\n  }\n\n  /**\n   * Set board items\n   */\n  setItems(items){\n    for(const item of items){\n      this.View.setItem(item.id, new this.component[item.type](item, this));\n    }\n    this.View.renderItems();\n  }\n}\n}).call(this,require(\"pBGvAp\"),typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/fake_fde5b6f3.js\",\"/\")"]}